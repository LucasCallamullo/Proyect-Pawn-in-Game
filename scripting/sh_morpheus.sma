// Morpheus! - The Main Man of the Matrix

/* CVARS - copy and paste to shconfig.cfg

//Morpheus
morpheus_level 15
morpheus_health 200		//vida
morpheus_armor 200		//armadura
morpheus_gravity 0.35		//Gravity Morpheus has
morpheus_speed 520		//velocidad
morpheus_mp5mult 2.0		//Damage multiplyer for his MP5

*/

#include <superheromod>

// VARIABLES
new gHeroID
new gHeroName[]="Morpheus"
new gHasMorphPower[SH_MAXSLOTS+1]
// the tick
new bool:isCzero
new bool:czBotRegisterHam
new serversMaxPlayers, bot_quota
new gPcvarDamage
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Morpheus","1.3","RadidEskimo & Freecode")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel	= register_cvar("morpheus_level", "15")
	gPcvarDamage	= register_cvar("morpheus_mp5mult", "3.5")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Dual MP5's.", "Obtén Dual MP5's/ Balas Infinitas/ No daño de las caidas.")
	sh_set_hero_shield(gHeroID, true)
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	register_event("CurWeapon", "weaponChange","be","1=1")
	register_event("Damage", "morpheus_damage","b","2!0")

	// THE TICK
	RegisterHam(Ham_TakeDamage, "player", "ham_TakeDamage")

	serversMaxPlayers = get_maxplayers()
	bot_quota = get_cvar_pointer("bot_quota")

	new mod_name[6]
	get_modname(mod_name, 5)
	isCzero = equal(mod_name, "czero", 5) ? true : false
}

public plugin_precache()
	precache_model("models/shmod/morpheus_mp5.mdl")
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	// if ( gHeroID != heroID ) return
	if ( gHeroID == heroID ) {
		switch(mode) {
			case SH_HERO_ADD: {
				gHasMorphPower[id] = true
				morpheus_weapons(id)
				switchmodel(id)
			}
			case SH_HERO_DROP: {
				gHasMorphPower[id] = false
				if ( is_user_alive(id) )
					sh_drop_weapon(id, CSW_MP5NAVY, true)
			}
		}
			
		sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
	}
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( gHasMorphPower[id] && is_user_alive(id) ) {
		set_task(0.1, "morpheus_weapons", id)
	}
}
//----------------------------------------------------------------------------------------------
public morpheus_weapons(id)
{
	if ( is_user_alive(id) ) {
		sh_give_weapon(id, CSW_MP5NAVY) 
		sh_give_item(id,"ammo_9mm")
		sh_give_item(id,"ammo_9mm")
	}
}
//----------------------------------------------------------------------------------------------
public switchmodel(id)
{
	if ( !is_user_alive(id) || !gHasMorphPower[id] ) return
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_MP5NAVY) {
		set_pev(id, pev_viewmodel2, "models/shmod/morpheus_mp5.mdl")
	}
}
//----------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !gHasMorphPower[id] || !shModActive() ) return

	new wpnid = read_data(2)
	if ( wpnid != CSW_MP5NAVY ) return
	
	switchmodel(id)
}
//----------------------------------------------------------------------------------------------
public morpheus_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasMorphPower[attacker] && weapon == CSW_MP5NAVY && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarDamage) - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "mp5navy", headshot )
	}
}
//----------------------------------------------------------------------------------------------
public ham_TakeDamage(this, inflictor, attacker, Float:damage, damagebits)
{
	if ( damagebits & DMG_FALL && gHasMorphPower[this] ) return HAM_SUPERCEDE

	return HAM_IGNORED
}
//----------------------------------------------------------------------------------------------
public client_putinserver(id)
{
	if ( id < 1 || id > serversMaxPlayers ) return

	if ( isCzero && !czBotRegisterHam ) {
		// Delay for private data to initialize
		set_task(0.1, "czbotHookHam", id)
	}
}
//----------------------------------------------------------------------------------------------
public czbotHookHam(id)
{
	// Thx to Avalanche and GunGame for this setup.
	if ( czBotRegisterHam || !is_user_connected(id) ) return

	// Make sure it's a bot, and if quota greater than 0 it's a cz bot.
	if ( pev(id, pev_flags) & FL_FAKECLIENT && get_pcvar_num(bot_quota) > 0) {
		// CZ bots do not register with their player classname so force them to
		RegisterHamFromEntity(Ham_TakeDamage, id, "ham_TakeDamage")
		czBotRegisterHam = true
	}
}
//----------------------------------------------------------------------------------------------
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
