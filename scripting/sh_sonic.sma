// SONIC! - from the Sega Sonic the Hedgehog video games.

/* CVARS - copy and paste to shconfig.cfg

//Sonic
sonic_level 0
sonic_gravity 0.40	//default 0.40 = lower gravity
sonic_health 170	//default 170
sonic_speed 510		//how fast he runs
sonic_maxlevel 12  	//max level

*/

/*
* v2.0 	- lucas arje - 5/11/23
* 	- change some pcvars and get best ways to set de models and use the new natives methods
*
* v1.2 - vittu - 6/22/05
*      - Minor code clean up.
*/

#include <superheromod>

// VARIABLES
new gHeroID
new gHeroName[]= "Sonic"
new bool:gHasSonicPower[SH_MAXSLOTS+1]
new gPcvarLevel

new const gSonic_CT[] = "models/player/sonic/sonic.mdl"
new const gSonic_TT[] = "models/player/sonic2/sonic2.mdl"
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Sonic", "1.2", "D-unit")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("sonic_level", "2")
	new pcvarHPnAP	= register_cvar("sonic_health", "200")
	new pcvarSpeed	= register_cvar("sonic_speed", "520")
	new pcvarGrav	= register_cvar("sonic_gravity", "0.50")
	gPcvarLevel	= register_cvar("sonic_maxlevel", "12")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Corre y Salta con Mayor Fuerza!", "Corre rápido, Salta alto, Más vida y armadura.")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// Let Server know about Sonic's Variables
	sh_set_hero_hpap(gHeroID, pcvarHPnAP, pcvarHPnAP)
	sh_set_hero_speed(gHeroID, pcvarSpeed)
	sh_set_hero_grav(gHeroID, pcvarGrav)
}

public plugin_precache()
{
	precache_model(gSonic_CT)
	precache_model(gSonic_TT)
}
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID == heroID ) {
		switch(mode) {
			case SH_HERO_ADD: {
				gHasSonicPower[id] = true
				sonic_checklevel(id)
				sonic_morph_unmorph(id)
			}
			case SH_HERO_DROP: {
				gHasSonicPower[id] = false
				sonic_morph_unmorph(id)
			}
		}
		
		sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
	}
}
//---------------------------------------------------------------------------------------------
//				SPAWN AND MORPH SKIN
//---------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( gHasSonicPower[id] ) {
		sonic_checklevel(id)
		sonic_tasks(id)	
	}
}

public sonic_tasks(id)
	set_task(1.0, "sonic_morph_unmorph", id)

public sonic_morph_unmorph(id)
{
	if ( gHasSonicPower[id] ) {
		switch(cs_get_user_team(id)) {
			case CS_TEAM_T: cs_set_user_model(id, gSonic_TT)
			case CS_TEAM_CT: cs_set_user_model(id, gSonic_CT)
			default: return
		}	 
	}
	
	else cs_reset_user_model(id)
}

public sonic_checklevel(id)
{
	static sonic_maxlvl, player_level
	sonic_maxlvl = get_pcvar_num(gPcvarLevel)
	player_level = sh_get_user_lvl(id)
	
	if ( player_level > sonic_maxlvl ) {
		sh_chat_message(id, gHeroID, "[%s] Debes estar en el nivel %d o menos para usar este Héroe.", gHeroName, sonic_maxlvl)
		gHasSonicPower[id] = false
		client_cmd(id,"say drop %s",gHeroName)
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
