// SONIC! - from the Sega Sonic the Hedgehog video games.

/* CVARS - copy and paste to shconfig.cfg

//Sonic
sonic_level 0
sonic_gravity 0.40	//default 0.40 = lower gravity
sonic_armor 170	//default 170
sonic_health 170	//default 170
sonic_speed 510	//how fast he runs
sonic_maxlevel 12  //max level

*/

/*
* v1.2 - vittu - 6/22/05
*      - Minor code clean up.
*
*/

#include <superheromod>

// VARIABLES
new gHeroID
new gHeroName[]= "Sonic"
new bool:gHasSonicPower[SH_MAXSLOTS+1]
new gPlayerLevels[SH_MAXSLOTS+1]
new gHasSonicSelected[SH_MAXSLOTS+1]
new bool:gmorphed[SH_MAXSLOTS+1]
new gPcvarLevel

new const gSonicPlayer[] = "models/player/sonic/sonic.mdl"
new const gSonicPlayer2[] = "models/player/sonic2/sonic2.mdl"

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Sonic", "1.2", "D-unit")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("sonic_level", "2")
	new pcvarHealth	= register_cvar("sonic_health", "200")
	new pcvarArmor	= register_cvar("sonic_armor", "200")
	new pcvarSpeed	= register_cvar("sonic_speed", "520")
	new pcvarGrav	= register_cvar("sonic_gravity", "0.50")
	gPcvarLevel	= register_cvar("sonic_maxlevel", "12")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Corre y Salta con Mayor Fuerza!", "Corre rápido, Salta alto, Más vida y armadura.")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// Let Server know about Sonic's Variables
	sh_set_hero_hpap(gHeroID, pcvarHealth, pcvarArmor)
	sh_set_hero_speed(gHeroID, pcvarSpeed)
	sh_set_hero_grav(gHeroID, pcvarGrav)
	
	// LEVELS
	register_srvcmd("sonic_levels", "sonic_levels")
	shRegLevels(gHeroName,"sonic_levels")
}

public plugin_precache()
{
	precache_model(gSonicPlayer)
	precache_model(gSonicPlayer2)
}
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID == heroID ) {
		switch(mode) {
			case SH_HERO_ADD: {
				gHasSonicPower[id] = true
				gHasSonicSelected[id] = gHasSonicPower[id]
				sonic_checklevel(id)
				sonic_tasks(id)
			}
			case SH_HERO_DROP: {
				gHasSonicPower[id] = false
				sonic_unmorph(id)
			}
		}
		
		sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
	}
}
//---------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	//Check is this player can use the hero
	if ( gHasSonicPower[id] && is_user_alive(id) ) {
		sonic_checklevel(id)
		sonic_tasks(id)	
	}
	
	if ( !gHasSonicPower[id] ) {
		sonic_unmorph(id)
	}
}

public sonic_tasks(id)
	set_task(1.0, "sonic_morph", id)

public sonic_morph(id)
{
	if ( gmorphed[id] || !is_user_alive(id) ) return
	
	switch(cs_get_user_team(id)) {
		case CS_TEAM_T: cs_set_user_model(id, "sonic2")
		case CS_TEAM_CT: cs_set_user_model(id, "sonic")
		default: return
	}	
	
	// cs_set_user_model(id, "sonic")
	
	
	gmorphed[id] = true
}

public sonic_unmorph(id)
{
	if ( gmorphed[id] ) {
		cs_reset_user_model(id)
		gmorphed[id] = false
	}
}

public sh_client_death(victim)
{
	if ( !is_user_alive(victim) && gHasSonicPower[victim] ) 
		switch(cs_get_user_team(victim)) {
			case CS_TEAM_T: cs_set_user_model(victim, "sonic2")
			case CS_TEAM_CT: cs_set_user_model(victim, "sonic")
		}	 
		//cs_set_user_model(victim, "sonic")
}
//----------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------
public sonic_levels()
{
	new id[5]
	new lev[5]

	read_argv(1,id,4)
	read_argv(2,lev,4)

	gPlayerLevels[str_to_num(id)] = str_to_num(lev)

	sonic_checklevel(str_to_num(id))
}

public sonic_checklevel(id)
{
	new sonic_maxlvl = get_pcvar_num(gPcvarLevel)
	if (gHasSonicSelected[id] && gPlayerLevels[id] > sonic_maxlvl) {
		sh_chat_message(id, gHeroID, "[%s] Debes estar en el nivel %d o menos para usar este Héroe.", gHeroName, sonic_maxlvl)
		gHasSonicPower[id] = false
		client_cmd(id,"say drop %s",gHeroName)
	}

}
//----------------------------------------------------------------------------------------------
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
