// Slayer (GGXX) - founder of the Assassins guild, has an unblockable move
/* CVARS - copy and paste to shconfig.cfg

//Slayer
slayer_level 6
slayer_cooldown 40	//Cooldown between god removals
slayer_chance 0.001	//Chance of assassination

*/

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Slayer"
new bool:gHasSlayer[SH_MAXSLOTS+1]
new gPcvarCooldown, gPcvarChance
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Slayer", "1.1", "Mydas")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("slayer_level", "0")
	gPcvarCooldown = register_cvar("slayer_cooldown", "25")
	gPcvarChance = register_cvar("slayer_chance", "0.00001")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Remove GodMode/ Asesina GodMode.", "Removedor de Godmode en la Mira, y probabilidad de matar con una Bala.")

	// GOD REMOVAL LOOP
	set_task(0.1, "slayer_loop", _, _, _, "b")
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return

	gHasSlayer[id] = mode ? true : false

	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	gPlayerInCooldown[id] = true
}
//----------------------------------------------------------------------------------------------
public slayer_loop()
{
	if ( !sh_is_active() ) return

	static players[SH_MAXSLOTS], playerCount, id, i
	static tid, tbody
	get_players(players, playerCount, "ah")

	for ( i = 0; i < playerCount; i++ ) {
		id = players[i]

		if ( !gHasSlayer[id] || gPlayerInCooldown[id] ) continue

		get_user_aiming(id, tid, tbody)

		if ( is_user_alive(tid) && (cs_get_user_team(id) != cs_get_user_team(tid) || sh_friendlyfire_on()) && get_user_godmode(tid) ) {
			set_user_godmode(tid, 0)
			sh_extra_damage(id, id, get_user_health(id) / 2, "Slayer Sacrifice")

			new Float:cooldown = get_pcvar_float(gPcvarCooldown)
			if ( cooldown > 0.0 ) sh_set_cooldown(id, cooldown)
		}
	}
}
//----------------------------------------------------------------------------------------------
public client_damage(attacker, victim, damage, wpnindex)
{
	if ( !sh_is_active() ) return
	if ( !is_user_connected(victim) || !is_user_alive(attacker)) return
	

	if ( gHasSlayer[attacker] && wpnindex != (CSW_KNIFE | CSW_HEGRENADE) ) {
	// use this way for avoid the fact that the function random is not a lot random
		if ( random_float(0.00, 10.00) >= (10.00 - get_pcvar_float(gPcvarChance)) ) {
			sh_extra_damage(attacker, attacker, get_user_health(attacker) / 2, "Slayer Sacrifice")
			sh_extra_damage(victim, attacker, 1337, "Assassination", _, SH_DMG_KILL)
			}
		}

}
//----------------------------------------------------------------------------------------------
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
