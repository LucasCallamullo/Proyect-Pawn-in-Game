// WOLVERINE!
/* CVARS - copy and paste to shconfig.cfg

//Wolverine
wolv_level 0
wolv_healpoints 3			//The # of HP healed per second
wolv_knifespeed 290			//Speed of wolveine in knife mode
wolv_knifemult 1.35			//Multiplier for knife damage

*/

// v1.17 - JTP - fixed runtime error on damage event if user is already dead
// v1.17.5 - JTP - Added code to allow you to regen to your max heatlh

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[]="Wolverine"
new bool:ghasWolvPowers[SH_MAXSLOTS+1]
new gPlayerMaxHealth[SH_MAXSLOTS+1]
new gHealPoints, gPcvarWolvMult, gPcvarHeal
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Wolverine","1.2","{HOJ}Batman/JTP10181")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("wolv_level", "0" )
	gPcvarWolvMult	= register_cvar("wolv_knifemult", "3.0" )
	gPcvarHeal	= register_cvar("wolv_healpoints", "5" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Garras y Auto-Regenaración.", "Obtén Auto-curación y daño Extra en la Faka.")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// Knife Model
	register_event("CurWeapon", "weaponChange","be","1=1")
	
	// HEAL LOOP
	set_task(1.0,"wolv_loop",0,"",0,"b" )

	// EXTRA KNIFE DAMAGE
	register_event("Damage", "wolv_damage", "b", "2!0")

	// NO SHIELD/ESCUDO
	sh_set_hero_shield(gHeroID, true)

	//Makes superhero tell wolverine a players max health
	register_srvcmd("wolv_maxhealth", "wolv_maxhealth")
	shRegMaxHealth(gHeroName, "wolv_maxhealth" )
	gHealPoints = get_pcvar_num(gPcvarHeal)
}

public plugin_precache()
	precache_model("models/shmod/wolv_knife.mdl")
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	 
	switch(mode) {
		case SH_HERO_ADD: {
			ghasWolvPowers[id] = true
			switchmodel(id)
			gPlayerMaxHealth[id] = 100
		}
		case SH_HERO_DROP: {
			ghasWolvPowers[id] = false
		}
	}
}

public weaponChange(id)
{
	if ( !ghasWolvPowers[id] || !is_user_alive(id) ) return
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	// new wpnid = read_data(2)
	if ( wpnid == CSW_KNIFE ) switchmodel(id)
}

switchmodel(id)
{
	if ( !is_user_alive(id) ) return
	
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE) {
		set_pev(id, pev_viewmodel2, "models/shmod/wolv_knife.mdl")
	}
}
//----------------------------------------------------------------------------------------------
public wolv_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return PLUGIN_CONTINUE

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

	if ( ghasWolvPowers[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarWolvMult) - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "knife", headshot )
	}
	
	return PLUGIN_CONTINUE
}

//----------------------------------------------------------------------------------------------
public wolv_loop()
{
	if (!shModActive()) return
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		if (  ghasWolvPowers[id] && is_user_alive(id)  )   {
			// Let the server add the hps back since the # of max hps is controlled by it
			// I.E. Superman has more than 100 hps etc.
			shAddHPs(id, gHealPoints, gPlayerMaxHealth[id] )
		}
	}
}

public wolv_maxhealth()
{
	new id[6]
	new health[9]

	read_argv(1,id,5)
	read_argv(2,health,8)

	gPlayerMaxHealth[str_to_num(id)] = str_to_num(health)
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
