// WOLVERINE!
/* CVARS - copy and paste to shconfig.cfg

//Wolverine
wolv_level 0
wolv_healpoints 3			//The # of HP healed per second
wolv_knifespeed 290			//Speed of wolveine in knife mode
wolv_knifemult 1.35			//Multiplier for knife damage

*/

// v1.17 - JTP - fixed runtime error on damage event if user is already dead
// v1.17.5 - JTP - Added code to allow you to regen to your max heatlh

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[]="Wolverine"
new bool:ghasWolvPowers[SH_MAXSLOTS+1]

new gHealPoints, gPcvarWolvMult, gPcvarHeal

new const gModel_V1[] = "models/shmod/wolv_knife.mdl"
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Wolverine","1.2","{HOJ}Batman/JTP10181")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("wolv_level", "0" )
	gPcvarWolvMult	= register_cvar("wolv_knifemult", "3.0" )
	gPcvarHeal	= register_cvar("wolv_healpoints", "5" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Garras y Auto-Regenaración.", "Obtén Auto-curación y daño Extra en la Faka.")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// Knife Model
	RegisterHam(Ham_Item_Deploy, "weapon_knife", "Knife_Deploy", 1)
	// NO SHIELD/ESCUDO
	sh_set_hero_shield(gHeroID, true)
	
	// EXTRA KNIFE DAMAGE
	register_event("Damage", "wolv_damage", "b", "2!0")
	
	
	// HEAL LOOP
	set_task(1.0,"wolv_loop",0,"",0,"b" )
	gHealPoints = get_pcvar_num(gPcvarHeal)
}

public plugin_precache()
	precache_model(gModel_V1)
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	 
	switch(mode) {
		case SH_HERO_ADD: {
			ghasWolvPowers[id] = true
			switchmodel(id)
		}
		case SH_HERO_DROP: {
			ghasWolvPowers[id] = false
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
//			CHANGE MODELS
//----------------------------------------------------------------------------------------------
public Knife_Deploy(iEnt)
{
	new id = get_pdata_cbase(iEnt, 41, 4)	// 41 y 4 son constantes van siempre
	if ( !is_user_alive(id) || !ghasWolvPowers[id] ) return HAM_IGNORED; 
	
	set_pev(id, pev_viewmodel2, gModel_V1)
	return HAM_IGNORED; 
} 

switchmodel(id) {
	if ( get_user_weapon(id) == CSW_KNIFE )
		set_pev(id, pev_viewmodel2, gModel_V1)
}
//----------------------------------------------------------------------------------------------
public wolv_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return PLUGIN_CONTINUE

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

	if ( ghasWolvPowers[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarWolvMult) - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "knife", headshot )
	}
	
	return PLUGIN_CONTINUE
}

public wolv_loop()
{
	static players[SH_MAXSLOTS], playerCount, id, i
	get_players(players, playerCount, "ah")
	
	for ( i = 0; i < playerCount; i++ ) {
		id = players[i]
		if ( !ghasWolvPowers[id] || !is_user_alive(id) ) continue   
		
		sh_add_hp(id, gHealPoints)
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
