 /* BombSquad!
 Credits-  Even though there isnt much XD
 sh_tutorial helped a lot
 Who ever made batman, it helped a lot too.
 Also the buyc4 amxx plugin helped me.
 Thanks to rockell for godmode help
 Thanks to jtp for plant/defuse check
 */

 /* CVARS - copy and paste to shconfig.cfg

//BombSquad
suicidesquad_level 1
suicidesquad_godtime 2 		// Time of godmode after defuse/planting starts - default 10
suicidesquad_awpmult 2.2 	// damage extra con awp oculto jejej
suicidesquad_deaglemult		//dk

 */
 
#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[] = "Suicide Squad"
new bool:gHasBSPower[SH_MAXSLOTS+1]
 
new const gSuicideAwp[] = "models/shmod/suicide_v_awp.mdl"
new const gSuicideDeagle[] = "models/shmod/suicide_v_deagle.mdl"

new gPcvarGodTime, gPcvarAwpMult, gPcvarDeagleMult
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO BombSquad","1.1","Emp`")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("suicidesquad_level", "1")
	gPcvarGodTime	= register_cvar("suicidesquad_godtime", "2")
	gPcvarAwpMult	= register_cvar("suicidesquad_awpmult", "2.5")
	
	//damage para mas armas
	gPcvarDeagleMult= register_cvar("suicidesquad_deaglemult", "2.5")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Protección al plantar/defusear.", "Cuando plantas/defuseas la c4 tenes 3 segundos de godmode solo la primera vez, usalo bien!! además obtenes daño en varias armas!")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)

	//eventos
	RegisterHam(Ham_Item_Deploy, "weapon_deagle", "Deagle_Deploy", 1)
	RegisterHam(Ham_Item_Deploy, "weapon_awp", "Awp_Deploy", 1)
	
	register_event("Damage", "bombsquad_damage", "b", "2!0")
}

public plugin_precache()
{
	precache_model(gSuicideAwp)
	precache_model(gSuicideDeagle)
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and SPAWN y REMOVE ENTITYS				//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	
	switch(mode) {
		case SH_HERO_ADD: {
			gHasBSPower[id] = true
			switch_model(id)
			suicide_weapons(id)
		}
		case SH_HERO_DROP: {
			gHasBSPower[id] = false
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}

public sh_client_spawn(id)
{
	if ( gHasBSPower[id] && is_user_alive(id) ) {
		
		if ( get_user_team(id) == 1 ) {
			//shGiveWeapon(id,"weapon_c4") 	// Give Ts a Bomb
			cs_set_user_plant(id,0,0) 	// Make bomb useable, sino va 1 , 1
		}
		else if ( get_user_team(id) == 2 ) { 
			shGiveWeapon(id,"item_thighpack")	// Give CTs a Defuse Kit	
		}
			
		set_task(0.2, "suicide_weapons", id)
	}
}

public suicide_weapons(id)
{
	sh_give_weapon(id, CSW_AWP)
	sh_give_weapon(id, CSW_DEAGLE)
	sh_give_item(id,"ammo_338magnum")
	sh_give_item(id,"ammo_338magnum")
	sh_give_item(id, "ammo_50ae")
	sh_give_item(id, "ammo_50ae")
	sh_give_item(id, "ammo_50ae")
}
//----------------------------------------------------------------------------------------------
//				CHANGE WEAPONS MODELS
//----------------------------------------------------------------------------------------------
public Deagle_Deploy(iEnt)
{
	new id = get_pdata_cbase(iEnt, 41, 4)	// 41 y 4 son constantes van siempre
	if ( !is_user_alive(id) || !gHasBSPower[id] ) return HAM_IGNORED; 
	
	set_pev(id, pev_viewmodel2, gSuicideDeagle)
	
	return HAM_IGNORED; 
}

public Awp_Deploy(iEnt)
{
	new id = get_pdata_cbase(iEnt, 41, 4)	// 41 y 4 son constantes van siempre
	if ( !is_user_alive(id) || !gHasBSPower[id] ) return HAM_IGNORED; 
	
	set_pev(id, pev_viewmodel2, gSuicideAwp)
	
	return HAM_IGNORED; 
}

switch_model(id)
{
	if ( !is_user_alive(id) || !gHasBSPower[id] )
		return

	if ( get_user_weapon(id) == CSW_AWP )
		set_pev(id, pev_viewmodel2, gSuicideAwp)
	
	else if ( get_user_weapon(id) == CSW_DEAGLE) 
		set_pev(id, pev_viewmodel2, gSuicideDeagle)
}
//----------------------------------------------------------------------------------------------
//				EVENT DAAMAGE
//----------------------------------------------------------------------------------------------
public bombsquad_damage(id)
{
	if ( !is_user_alive(id) ) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasBSPower[attacker] && weapon == CSW_AWP && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarAwpMult) - damage)
		if (extraDamage > 0) shExtraDamage(id, attacker, extraDamage, "awp", headshot)
	}
	
	/* else if ( gHasBSPower[attacker] && weapon == CSW_AK47 && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("suicidesquad_akmulti") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "ak47", headshot )
	}
	
	else if ( gHasBSPower[attacker] && weapon == CSW_MP5NAVY && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("suicidesquad_mp5mult") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "mp5navy", headshot )
	} */
	
	else if ( gHasBSPower[attacker] && weapon == CSW_DEAGLE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarDeagleMult) - damage)
		if (extraDamage > 0) shExtraDamage(id, attacker, extraDamage, "deagle", headshot)
	}
}
//----------------------------------------------------------------------------------------------
//				BOMB EVENT
//----------------------------------------------------------------------------------------------
public bomb_planting(planter)
{
	if ( gHasBSPower[planter] && is_user_alive(planter) ) {
		sh_set_godmode(planter, get_pcvar_float(gPcvarGodTime))
		sh_chat_message(planter, gHeroID, "Tenes %d segundos de Godmode para plantar la C4.", get_pcvar_num(gPcvarGodTime))
		return PLUGIN_HANDLED
	}
	
	return PLUGIN_HANDLED
}

public bomb_defusing(defuser)
{
	if ( gHasBSPower[defuser] && is_user_alive(defuser) ) {
		sh_set_godmode(defuser, get_pcvar_float(gPcvarGodTime))
		sh_chat_message(defuser, gHeroID, "Tenes %d segundos de Godmode para Defusear la c4.", get_pcvar_num(gPcvarGodTime))
		return PLUGIN_HANDLED
	}
	
	return PLUGIN_HANDLED
}

public client_connect(id)
	gHasBSPower[id] = false
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
