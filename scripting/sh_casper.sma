// CASPER! - the Friendly Ghost! 

/* CVARS - copy and paste to shconfig.cfg

//Casper
casper_level 8
casper_health 50		//Max amount of Health when in Ghost mode (Default 50)
casper_armor 25		//Max amount of Armor when in Ghost mode (Default 25)
casper_stuckcheck 1		//Kill user if stuck in wall/ground after noclip, 0=no 1=yes (Default 1)
casper_cooldown 5	// set cooldown

*/

/*
* v1.1 - vittu - 6/13/05
*      - Made HP/AP settings as a Max for when in Ghost mode, otherwise
*          they were pretty much useless.
*      - Removed useless code and made invisibility loop itself incase
*          user is made to glow.
*      - Added option to kill a stuck user when leaving no clip.
*
*   Hero Created by BLU3 V1Z10N & maybe
*/

// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[] = "Casper"
new bool:gHasCasperPower[SH_MAXSLOTS+1]

// check if has stuck
new g_lastPosition[SH_MAXSLOTS+1][3]

// pcvars for the best code
new gCasperHealth, gPcvarHealth, gPcvarStuck, gPcvarCooldown

new Float:gPcvarRealCD[SH_MAXSLOTS+1] 
//-------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Casper", "1.1", "BLU3 V1Z10N / maybe / vittu")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel	= register_cvar("casper_level", "8")
	gPcvarHealth	= register_cvar("casper_health", "50")
	gPcvarStuck	= register_cvar("casper_stuckcheck", "1")
	gPcvarCooldown	= register_cvar("casper_cooldown", "5")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Ghost Mode!", "Volvete invisible, entra y sali de las paredes como un fantasma! Cuidado tenes poca HP/AP cuando estás en Ghost Mode.");
	sh_set_hero_bind(gHeroID); 
}

//------------------------------------------------------------------------------------------------
//				Hero INIT and KEY						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) 
{ 
	if ( heroID != gHeroID ) return
    
	switch(mode) {
		case SH_HERO_ADD: {
			gHasCasperPower[id] = true
			gPlayerInCooldown[id] = false
		}
		case SH_HERO_DROP: {
			gHasCasperPower[id] = false
			if ( is_user_alive(id) ) casper_removeghost(id)
		}
	}
}

public sh_hero_key(id, heroID, key) 
{ 
	if ( heroID != gHeroID || !sh_is_inround() ) return
	if ( !is_user_alive(id) || !gHasCasperPower[id] ) return 
	
	switch(key) {
		case SH_KEYDOWN: {
			
			if ( gPlayerInCooldown[id] ) {
				sh_chat_message(id, gHeroID, "Tenes que esperar para volver a entrar en Casper Mode.")
				playSoundDenySelect(id)
				return
			}

			casper_setghost(id)
		}
		
		case SH_KEYUP: {
			if ( gPlayerInCooldown[id] ) return
			
			casper_removeghost(id)
			
			// Set Cooldown
			new Float:seconds = get_pcvar_float(gPcvarCooldown)
			if ( seconds > 0.0 ) {
				sh_set_cooldown(id, seconds)
				gPcvarRealCD[id] = seconds
			}
		}
	}
}

#if SEND_COOLDOWN
public sendCasperCooldown(id)
{
	gPcvarRealCD[id] = sh_get_cooldown(id)
	return floatround(gPcvarRealCD[id]) 
}
#endif
//------------------------------------------------------------------------------------------------
//				Spawn n Death							//
//------------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( gHasCasperPower[id] && is_user_alive(id) ) {
		casper_removeghost(id)
		
		// Para controlar si esta en ronda y tener el cooldown real.
		if ( sh_is_inround() ) {
			if ( gPcvarRealCD[id] > 0.0 ) sh_set_cooldown(id, gPcvarRealCD[id])
			// False = Nace sin cooldowsn, True = Nace con cooldown.
			else gPlayerInCooldown[id] = false
		}
		// if is a new round set cooldown in zero
		else gPlayerInCooldown[id] = false
	}
}

public sh_client_death(victim) {
	if ( gHasCasperPower[victim] && !is_user_alive(victim) ) gPcvarRealCD[victim] = sh_get_cooldown(victim)
}

public casper_setghost(id)
{
	// Reload CVARS to make sure the variables are current
	gCasperHealth	 = get_pcvar_num(gPcvarHealth)
	set_user_noclip(id, 1)

	// Set invisible first then loop it
	set_user_rendering(id, kRenderFxGlowShell, 50, 50, 50, kRenderTransAlpha, 12)
	set_task(1.0, "casper_loop", id, "", 0, "b")

	// Save users current hp/ap to be set back when exiting ghost mode
	// and only change hp/ap if they have more then max for ghost mode
	new gUserHealth = get_user_health(id)
	if ( gUserHealth > gCasperHealth ) {
		set_user_health(id, gCasperHealth * 4)
	}

	// Let them know they are in Ghost Mode
	new message[128]
	if ( get_pcvar_num(gPcvarStuck) == 1) {
		format(message, 127, "%s - Entraste en Ghost Mode!^nNo te quedes Atorado o Morirás.", gHeroName)
	}
	else {
		format(message, 127, "%s - Has entrado en Ghost Mode!", gHeroName)
	}
	set_hudmessage(200, 200, 200, -1.0, 0.3, 0, 0.25, 2.0, 0.0, 0.0, 4)
	show_hudmessage(id, message)
}
//---------------------------------------------------------------------------------------------
public casper_loop(id)
{
	if ( !gHasCasperPower[id] || !is_user_alive(id) ) return

	set_user_rendering(id, kRenderFxGlowShell, 30, 30, 30, kRenderTransAlpha, 12)

	// Preven regen past cvar HP in Ghost Mode
	if ( get_user_health(id) > gCasperHealth ) set_user_health(id, gCasperHealth)
}
//---------------------------------------------------------------------------------------------
public casper_removeghost(id)
{
	remove_task(id)

	if ( !is_user_connected(id) ) return

	if ( get_user_noclip(id) == 1) {
		set_user_noclip(id, 0)
		if ( get_pcvar_num(gPcvarStuck) == 1 ) {
			positionChangeTimer(id)
		}
	}

	set_user_rendering(id)

	if ( is_user_alive(id) ) {
		// Let them know they are no longer in Ghost Mode
		new message[128]
		format(message, 127, "%s - Saliste del Ghost Mode!", gHeroName)
		set_hudmessage(200, 200, 200, -1.0, 0.3, 0, 0.25, 2.0, 0.0, 0.0,3)
		show_hudmessage(id, message)
	}

}
//---------------------------------------------------------------------------------------------
public positionChangeTimer(id)
{
	if ( !is_user_alive(id) ) return

	get_user_origin(id, g_lastPosition[id])

	new Float:velocity[3]
	// Entvars_Get_Vector(id, EV_VEC_velocity, velocity)
	entity_get_vector(id, EV_VEC_velocity, velocity)

	if ( velocity[0]==0.0 && velocity[1]==0.0 ) {
		// Force a Move (small jump)
		velocity[0] += 20.0
		velocity[2] += 100.0
		// Entvars_Set_Vector(id, EV_VEC_velocity, velocity)
		entity_set_vector(id, EV_VEC_velocity, velocity);
	}

	set_task(0.4, "positionChangeCheck", id)
}
//----------------------------------------------------------------------------------------------
public positionChangeCheck(id)
{
	if ( !is_user_alive(id) ) return

	new origin[3]
	get_user_origin(id, origin)

	if ( g_lastPosition[id][0] == origin[0] && g_lastPosition[id][1] == origin[1] && g_lastPosition[id][2] == origin[2] && is_user_alive(id) ) {
		// Kill this player - Stuck in wall!
		user_kill(id)
		sh_chat_message(id, gHeroID, "Moriste por quedarte atorado cuando saliste del Ghost Mode")
	}
}
//---------------------------------------------------------------------------------------------
public client_disconnected(id)
{
	if ( !gHasCasperPower[id] ) return

	remove_task(id) 
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
