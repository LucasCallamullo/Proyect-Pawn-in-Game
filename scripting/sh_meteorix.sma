// Meteorix! - Throw blue lightnings
/* CVARS - copy and paste to shconfig.cfg

// Meteorix
meteorix_level 9
meteorix_ammo -1			// How many lightnings do you have? (-1 to unlimited)
meteorix_burndecals 1		// Show the burn decals? (0 = no, 1 = yes)
meteorix_shotmult 0.5		// Delay for multishots on holding key down.

// estos son los originales
#define h1_dam 390 // head
#define h2_dam 190  // body
#define h3_dam 170  // stomach
#define h4_dam 110  // arm
#define h6_dam 110  // leg

*/
// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// Al parecer con armadura esto se reduce a la mitad so como siempre va a haber armadura gg todo x2
new const lDamage[7] = {
	700,	//head
	350,	//chest
	300,	//stomach
	200,	//left arm
	200,	//right arm
	200,	//left leg
	200	//right leg
}

//Global Variables
new gHeroID
new gHeroName[]="Meteorix"
new bool:gHasMeteorixPower[SH_MAXSLOTS+1]
new lightnings_shots[SH_MAXSLOTS+1]

// Sprites
new gSpriteSmoke, gSpriteFire, gSpriteBurning

// Cvars
new max_shots, burndecals, Float:shot_mult

// models hero
new const gSprite_Model[] = "sprites/shmod/blue_flame.spr"
new const gSound_effect[] = "shmod/lightnin.wav"

// generic for interactiones with other heros
new const gOthers_Heros[][] = {
	"Noob"
}
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Meteorix", "1.0", "NOmeR1")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel	= register_cvar("meteorix_level", "9")
	register_cvar("meteorix_ammo", "-1")
	register_cvar("meteorix_burndecals", "1")
	register_cvar("meteorix_shotmult", "0.5") 

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Lightnings Blues!.", "Podes tirar Relámpagos Azules que realentizan. - Pone en say /bind para aprender a bindear.");
	sh_set_hero_bind(gHeroID); 
}

public plugin_precache()
{
	// Sprites
	gSpriteSmoke = precache_model("sprites/steam1.spr")
	gSpriteFire = precache_model("sprites/lgtning.spr")
	gSpriteBurning = precache_model(gSprite_Model)
	// Sound
	precache_sound(gSound_effect)
	precache_sound("weapons/xbow_hitbod2.wav")
}

public plugin_cfg()
{	// Cvars
	max_shots 	= get_cvar_num("meteorix_ammo")
	burndecals 	= get_cvar_num("meteorix_burndecals")
	shot_mult 	= get_cvar_float("meteorix_shotmult")
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and KEY						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) 
{ 
	if ( heroID != gHeroID ) return
    
	switch(mode) {
		case SH_HERO_ADD: {
			gHasMeteorixPower[id] = true
			gPlayerInCooldown[id] = false
			lightnings_shots[id] = max_shots
		}
		case SH_HERO_DROP: {
			gHasMeteorixPower[id] = false
		}
	}
}

public sh_hero_key(id, heroID, key) 
{ 
	if ( heroID != gHeroID || !sh_is_inround() ) return
	if ( !is_user_alive(id) || !gHasMeteorixPower[id] ) return 
	
	switch(key) {
		case SH_KEYDOWN: {
			// If you have no lightnings
			if(lightnings_shots[id] == 0) {
				sh_chat_message(id, gHeroID, "No te quedan más Lightnings Blues!")
				playSoundDenySelect(id)
				return
			}
			
			lightnings_shot(id)
			
			// Shoot a blue lightnings
			if(shot_mult > 0.0)
				set_task(shot_mult, "lightnings_shot", id, "", 0, "b")
		}
		case SH_KEYUP: {
			// Stop using lightnings
			remove_task(id)
		}
	}
}
#if SEND_COOLDOWN
public sendMeteorixCooldown(id)
{
	new cooldown
	if ( lightnings_shots[id] > 0 )
		cooldown = lightnings_shots[id]
	else
		cooldown = -1
	return cooldown
}
#endif
//------------------------------------------------------------------------------------------------
//				Efectos de Disparar Rayos					//
//------------------------------------------------------------------------------------------------
public lightnings_shot(id)
{
	if ( !is_user_alive(id) || !gHasMeteorixPower[id] || lightnings_shots[id] <= 0 ) return

	if ( lightnings_shots[id] > -1 ) lightnings_shots[id]--
	
	new aimvec[3]
	new tid, tbody
	new FFOn = get_cvar_num("mp_friendlyfire")
	// Get position from eyes
	get_user_origin(id, aimvec, 3)
	
	// Throw blue lightnings
	lightningEffects(id, aimvec)
	
	// Get targeted player
	get_user_aiming(id, tid, tbody)
	if(is_user_alive(tid) && (FFOn || get_user_team(id) != get_user_team(tid))) {
		
		emit_sound(tid,CHAN_BODY, "weapons/xbow_hitbod2.wav", 0.2, ATTN_NORM, 0, PITCH_NORM)
		
		// For check if has the other power
		new id_hero = sh_get_hero_id( gOthers_Heros[0] )
		if ( sh_user_has_hero(tid, id_hero) ) {
			// Damage y stun
			sh_extra_damage(tid, id, lDamage[tbody-1]/2, "Blue lightnings from Meteorix", tbody == 1 ? 1 : 0, SH_DMG_NORM, true) 
		} else 	{
			// Damage y stun
			sh_extra_damage(tid, id, lDamage[tbody-1], "Blue lightnings from Meteorix", tbody == 1 ? 1 : 0, SH_DMG_NORM, true) 
			sh_set_stun(tid, 0.1, 550.0)
		}
	}
}

public lightningEffects(id, aimvec[3])
{
	emit_sound(id, CHAN_ITEM, gSound_effect, 0.2, ATTN_NORM, 0, PITCH_NORM)

	new origin[3]
	get_user_origin(id, origin)
	// Height + 10 (From a stomach on hands)
	origin[2] = origin[2] + 10

	// DELIGHT
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(27)
	write_coord(origin[0])
	write_coord(origin[1])
	write_coord(origin[2])
	write_byte(10)
	write_byte(19) // r, g, b
	write_byte(97) // r, g, b
	write_byte(255) // r, g, b
	write_byte(3) // life
	write_byte(1) // decay
	message_end()

	for(new i = 1; i <= 5; i++) {
		// BEAMENTPOINTS
		message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
		write_byte(0) // TE_BEAMENTPOINTS 0
		if(i == 1) {
			write_coord(origin[0])
		} else if(i == 2 || i == 4) {
			write_coord(origin[0] + (i * 2))
		} else {
			write_coord(origin[0] - (i * 2))
		}
		write_coord(origin[1])
		write_coord(origin[2])
		write_coord(aimvec[0])
		write_coord(aimvec[1])
		write_coord(aimvec[2])
		write_short(gSpriteFire)
		write_byte(1) // framestart
		write_byte(10) // framerate
		write_byte(3) // life
		write_byte(50) // width
		write_byte(50) // noise
		write_byte(19) // r, g, b
		write_byte(97) // r, g, b
		write_byte(255) // r, g, b
		write_byte(200) // brightness
		write_byte(200) // speed
		message_end()
	}

	// Sparks
	message_begin(MSG_PVS, SVC_TEMPENTITY)
	write_byte(9)
	write_coord(aimvec[0])
	write_coord(aimvec[1])
	write_coord(aimvec[2])
	message_end()

	// Fire
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(3)
	write_coord(aimvec[0])
	write_coord(aimvec[1])
	write_coord(aimvec[2])
	write_short(gSpriteBurning)
	write_byte(22)
	write_byte(10)
	write_byte(0)
	message_end()

	// Smoke
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(5)
	write_coord(aimvec[0])
	write_coord(aimvec[1])
	write_coord(aimvec[2])
	write_short(gSpriteSmoke)// short (sprite index)
	write_byte(60) // byte (scale in 0.1's)
	write_byte(15) // byte (framerate)
	message_end()

	if(burndecals != 0) {
		// TE_GUNSHOTDECAL
		message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
		write_byte(109) // decal and ricochet sound
		write_coord(aimvec[0]) // pos
		write_coord(aimvec[1])
		write_coord(aimvec[2]) 
		write_short(0) // I have no idea what thats supposed to be
		write_byte(random_num(28, 30)) // decal
		message_end()
	}
}
//------------------------------------------------------------------------------------------------
//				Spawn and Disconected 						//
//------------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if( gHasMeteorixPower[id] )
		lightnings_shots[id] = max_shots
}

public client_disconnected(id)
{
	// stupid check but lets see
	if(id <= 0 || id > SH_MAXSLOTS) return

	// Yeah don't want any left over residuals
	remove_task(id)
	gHasMeteorixPower[id] = false
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
