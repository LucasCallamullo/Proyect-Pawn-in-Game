/*
// Tranza
tranza_level 3
tranza_vision 300	//zoom del efecto
tranza_tint 50	//brillo del efecto verde
tranza_percent 0.25	//efectos slap/humo porcentaje de que pase
tranza_drugtime 6.0
tranza_cooldown 3 

*/
// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[]="Tranza"
new bool:gHasWeedMan[SH_MAXSLOTS+1]
new AlienModeOn[SH_MAXSLOTS+1]
new CvarZoomVision, CvarTint, pcvarPercent, gPcvarDrugTime
new smoke, MsgSetFOV, gPcvarCooldown
#if SEND_COOLDOWN
	new Float:TranzaUsedTime[SH_MAXSLOTS+1]
#endif
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO WeedMan", "1.1", "Lucas Cab Arje")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvar_lev 	= register_cvar("tranza_level", "7")		// LEvel
	CvarZoomVision 	= register_cvar("tranza_vision", "300")		//zoom del alien
	CvarTint 	= register_cvar("tranza_tint", "50")		// brillo del verde del efecto
	pcvarPercent	= register_cvar("tranza_percent", "0.25")	// porcentaje de que se produzcan slaps y o humo
	gPcvarDrugTime	= register_cvar("tranza_drugtime", "5.0")	// tiempo drogado
	gPcvarCooldown	= register_cvar("tranza_cooldown", "5")		// cooldown

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvar_lev);
	sh_set_hero_info(gHeroID, "Planta Hierba.", "Si alguien toca o apuntas la Hierba a un objetivo recibirÃ¡ efectos de drogado - Pone en say /bind para aprender a bindear.");
	sh_set_hero_bind(gHeroID);  

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	MsgSetFOV = get_user_msgid("SetFOV")
}

public plugin_precache()
{
	precache_model("sprites/shmod/weed.spr")
	smoke = precache_model("sprites/steam1.spr")
}
//------------------------------------------------------------------------------------------------
//				SH INIT and KEY							//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) 
{ 
	if ( heroID != gHeroID ) return
    
	switch(mode) {
		case SH_HERO_ADD: {
			gHasWeedMan[id] = true
			gPlayerInCooldown[id] = false
		}
		case SH_HERO_DROP: {
			gHasWeedMan[id] = false;
			remove_weed(id)
		}
	} 
}

public sh_hero_key(id, heroID, key) 
{ 
	if ( heroID != gHeroID || !sh_is_inround() ) return; 
	if ( !is_user_alive(id) || !gHasWeedMan[id] ) return;
    
	if ( key == SH_KEYDOWN ) {
		
		if ( gPlayerUltimateUsed[id] ) {
			playSoundDenySelect(id)
			return;
		}
		// remove_weed(id)		// This is for only have one box at the time
		
		weedman_shot(id)
		
		new Float:seconds = get_pcvar_float(gPcvarCooldown)
		if ( seconds > 0.0 ) {
			sh_set_cooldown(id, seconds)	
			#if SEND_COOLDOWN
				TranzaUsedTime[id] = get_gametime()
			#endif
		}
	}
}
#if SEND_COOLDOWN
public sendTranzaCooldown(id)
{
	new cooldown
	if (gPlayerInCooldown[id])
		cooldown = floatround( get_pcvar_num(gPcvarCooldown) - get_gametime() + TranzaUsedTime[id] + 0.4 )
	else
		cooldown = -1
	return cooldown
}
#endif
//------------------------------------------------------------------------------------------------
//				Power Weed, Spawn y REmove					//
//------------------------------------------------------------------------------------------------
public weedman_shot(id)
{
	new aimvec[3]			// Get position from eyes
	get_user_origin(id, aimvec, 3)	// Get position from eyes
	weed_create(id, aimvec)  

	// Get targeted player  -  -  In theory, this is so that if it hits it, it burns at once and not if or if I have to touch it.
	new tid, tbody 
	new FFOn = get_cvar_num("mp_friendlyfire")
	get_user_aiming(id, tid, tbody)
	if(is_user_alive(tid) && gHasWeedMan[id] && (FFOn || get_user_team(id) != get_user_team(tid))) {
		new ptd = tid
		alien_vision_on(ptd);
		remove_weed(id); 
	}
}

public sh_client_spawn(id)
{
	if (gHasWeedMan[id] ) {
		gPlayerUltimateUsed[id]=false
		remove_weed(id); 
	}
}
//------------------------------------------------------------------------------------------------
//				Create Entity Weed y Touch					//
//------------------------------------------------------------------------------------------------
public weed_create(id, aimvec[3])
{ 	
	new Float:vOrigin[3]
	vOrigin[0] += aimvec[0]
	vOrigin[1] += aimvec[1] 
	vOrigin[2] += aimvec[2] + 15
	
	new Weed = create_entity("env_sprite")
	entity_set_string(Weed, EV_SZ_classname, "Weed")
	entity_set_model(Weed, "sprites/shmod/weed.spr")	
	entity_set_size(Weed, Float:{-2.5, -2.5, -1.5}, Float:{2.5, 2.5, 1.5})
	entity_set_float(Weed, EV_FL_scale, 0.5)	 		// para poner el tamaño del sprite x2.0 es el doble
	entity_set_edict(Weed, EV_ENT_owner, id)
	entity_set_int(Weed, EV_INT_solid, SOLID_TRIGGER)
	entity_set_int(Weed, EV_INT_movetype, MOVETYPE_FLY)
	entity_set_vector(Weed, EV_VEC_origin, vOrigin)

	entity_set_int(Weed, EV_INT_rendermode, kRenderFxNoDissipation);		// necesario para quitar el fondo negro
	set_rendering(Weed, kRenderFxNoDissipation, _, _, _, kRenderGlow, 255) 	// put this to remove the black background of the sprite
}

public pfn_touch(ptr, ptd) 
{
	if(!is_valid_ent(ptd) || !is_valid_ent(ptr)) return PLUGIN_CONTINUE		
	if(!is_user_connected(ptd) || !is_user_alive(ptd)) return PLUGIN_CONTINUE	
		
	new classname[32]
	entity_get_string(ptr, EV_SZ_classname, classname, 31)
	if ( equal(classname, "Weed") ) {
		static id;
		id = entity_get_edict(ptr, EV_ENT_owner);
		if ( gHasWeedMan[id] && get_user_team(id) != get_user_team(ptd) ) {
			alien_vision_on(ptd);
			remove_entity(ptr);
		}	
	}
	
	return PLUGIN_CONTINUE 
}

public remove_weed(id)
{
	new ent = 33;
	while ( (ent = find_ent_by_class(ent, "Weed")) != 0 ) {
		if( entity_get_edict(ent, EV_ENT_owner) != id )
			continue;
			
		remove_entity(ent);
	}
	
	/* new Weed = find_ent_by_class(-1, "Weed")
	while(Weed) {
		remove_entity(Weed)
		Weed = find_ent_by_class(Weed, "Weed")
	} */
}
//------------------------------------------------------------------------------------------------
//				Efectos Alien y Humo						//
//------------------------------------------------------------------------------------------------
public alien_vision_on(ptd)
{
	if ( !sh_is_inround() || !shModActive() ) return
	new id = ptd
	
	if ( is_user_alive(id) ) {
		AlienModeOn[id] = true
		// Prevent cvar from being set too low
		new Zoom = get_pcvar_num(CvarZoomVision)

		if ( Zoom < 100 ) {
			debugMessage("(Alien) Alien Vision must be set higher than 100, defaulting to 100", 0, 0)
			Zoom = 100
			set_pcvar_num(CvarZoomVision, Zoom)
		}

		// Set Zoom
		message_begin(MSG_ONE, MsgSetFOV, {0,0,0}, id)
		write_byte(Zoom)
		message_end()

		// Set Gravity
		set_user_gravity(id, 2.0)
		set_user_maxspeed(id, 100.0)
		
		// Set once before loop task
		setScreenFlash(id, 0, 200, 0, 13, get_pcvar_num(CvarTint))

		// Loop to make sure their screen stays green and they stay invisible
		set_task(0.5, "alien_loop", id, "", 0, "b")
		
		set_task(get_pcvar_float(gPcvarDrugTime), "alien_vision_off", id)
	}
}

public alien_loop(id)
{
	// Prevents loop from running on disconnected clients
	if ( !shModActive() || !AlienModeOn[id] || !is_user_alive(id)  ) return
	
	if ( is_user_alive(id) ) { 
		setScreenFlash(id, 0, 200, 0, 13, get_pcvar_num(CvarTint))
	}
	
	new randnum = random_num(0, 100)
	new weedchanche = floatround(get_pcvar_float(pcvarPercent) * 100)
	
	if ( weedchanche >= randnum ) {
		user_slap(id, 10, 1)
		user_slap(id, 10, 1)
		user_slap(id, 10, 1)
		make_fog(id)
		user_slap(id, 10, 1)
	}
}

public alien_vision_off(id)
{
	if ( !is_user_connected(id) || !AlienModeOn[id] ) return

	sh_reset_min_gravity(id)
	sh_reset_max_speed(id)
	
	// Quickly removes screenflash
	setScreenFlash(id, 0, 200, 0, 1, get_pcvar_num(CvarTint))

	// Reset Zoom
	message_begin(MSG_ONE, MsgSetFOV, {0,0,0}, id)
	write_byte(90)	//Normal, not Zooming
	message_end()

	// Makes sure this function is only called once, if alien mode was on
	AlienModeOn[id] = false
}

public make_fog(id)
{
	sh_set_stun(id, 1.0, 100.0)
	new origin[3]
	get_user_origin(id,origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	fog_this_area(origin)
	//fog_this_area(origin)
	//fog_this_area(origin)
	//fog_this_area(origin)
	//fog_this_area(origin)
	//fog_this_area(origin)
	//fog_this_area(origin)

	return PLUGIN_HANDLED
}

public fog_this_area(origin[3])
{
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,origin )
	write_byte( 5 )
	write_coord( origin[0] + random_num( -100, 100 ))
	write_coord( origin[1] + random_num( -100, 100 ))
	write_coord( origin[2] + random_num( -75, 75 ))
	write_short( smoke )
	write_byte( 50 )
	write_byte( 5 )
	message_end()
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
