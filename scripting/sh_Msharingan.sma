// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <amxmod>	// This is for respawn tsukuyomi
#include <superheromod>
#include <Vexd_Utilities> 

new gHeroID 
new HeroName[] = "Mangekyou Sharingan"
new bool:HasMsharingan[SH_MAXSLOTS+1]
// GLOBAL VARIABLES
new bool:UsingMsharingan[SH_MAXSLOTS+1]
new MsharinganTimer[SH_MAXSLOTS+1]
new CvarSlowMoTime, CvarCooldown, CvarMsharinganSpeed, CvarNonMsharinganSpeed, MsharinganHudSync, stuntimenonMsha
// tsukuyomi
static g_savedOrigin2[SH_MAXSLOTS+1][3], g_lastPosition2[SH_MAXSLOTS+1][3]
new KillCountMangekyou[SH_MAXSLOTS+1]
new pcvarMangekyouRespawns, gPcvarDeathRadius

#if SEND_COOLDOWN
	new Float:MSharinganUsedTime[SH_MAXSLOTS+1]
#endif
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Mangekyou Sharingan", "1.5", "thechosenone,emp")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 		= register_cvar("msharingan_level", "12")
	CvarSlowMoTime		= register_cvar("msharingan_slowmotime", "7")		// tiempo del sharingan
	CvarCooldown 		= register_cvar("msharingan_cooldown", "20")		// cooldown
	CvarMsharinganSpeed 	= register_cvar("msharingan_speed", "750")		// Velocidad al usarlo
	CvarNonMsharinganSpeed 	= register_cvar("msharingan_nospeed", "1")		// Velocidad del que no lo usa
	stuntimenonMsha		= register_cvar("msharingan_stuntime", "1.5")		// del que no tiene sharingan
	pcvarMangekyouRespawns	= register_cvar("msharingan_respawn", "1")		// How many times can you revive your enemy after tsukuyomi activates and u are alive?
	gPcvarDeathRadius	= register_cvar("msharingan_radius", "500")		// How many times can you revive your enemy after tsukuyomi activates and u are alive?
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(HeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Mangekyou Sharingan.", "Mete a tus enemigos en tu Genjutsu.");
	sh_set_hero_bind(gHeroID); 
	
	MsharinganHudSync = CreateHudSyncObj() 
}

public plugin_precache()
{
	precache_sound("shmod/mangsharingan.wav")
	precache_sound("debris/bustglass1.wav")
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and KEY						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) 
{ 
	if ( heroID != gHeroID ) return
    
	switch(mode) {
		case SH_HERO_ADD: {
			HasMsharingan[id] = true
			gPlayerInCooldown[id] = false
			UsingMsharingan[id] = false
		}
		case SH_HERO_DROP: {
			HasMsharingan[id] = false
		}
	}
}

public sh_hero_key(id, heroID, key) 
{ 
	if ( heroID != gHeroID || !sh_is_inround() ) return;
	if ( !is_user_alive(id) || !HasMsharingan[id] ) return;
    
	if ( key == SH_KEYDOWN ) {
		
		if ( gPlayerUltimateUsed[id] || UsingMsharingan[id] ) {
			playSoundDenySelect(id)
			return
		}
		
		emit_sound(id, CHAN_STATIC, "shmod/mangsharingan.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
		sharingan_keypower(id)
		
		#if SEND_COOLDOWN
			MSharinganUsedTime[id] = get_gametime()
		#endif
	}
}
#if SEND_COOLDOWN
public sendMSharinganCooldown(id)
{
	new cooldown
	if (gPlayerInCooldown[id])
		cooldown = floatround( get_pcvar_num(CvarCooldown) + get_pcvar_num(CvarSlowMoTime) + 1 - get_gametime() + MSharinganUsedTime[id] + 0.4 )
	else
		cooldown = -1
	return cooldown
}
#endif
//------------------------------------------------------------------------------------------------
//					Spawn y Death						//
//------------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( is_user_alive(id) && HasMsharingan[id] ) {
		MsharinganTimer[id] 	= -1
		UsingMsharingan[id] 	= false
		gPlayerUltimateUsed[id] = false
	}
}
//------------------------------------------------------------------------------------------------
//				Evento de keypower y Loop					//
//------------------------------------------------------------------------------------------------
public sharingan_keypower(id)
{
	new Float:taskglow	= get_pcvar_float(CvarSlowMoTime)
	new sharinganradius	= get_pcvar_num(gPcvarDeathRadius)
	MsharinganTimer[id] 	= get_pcvar_num(CvarSlowMoTime) + 1
	
	set_task(1.0, "msharingan_loop", id, "", _, "b")
	
	if ( HasMsharingan[id] ) {
		set_user_maxspeed(id, get_pcvar_float(CvarMsharinganSpeed) )	// set_user_maxspeed(id, msharinganSpeed)
		sh_screen_fade( id, taskglow, taskglow, 0, 0, 0, 140)		//make screen gray
		sh_set_rendering(id, 116, 2, 192, 16, kRenderFxGlowShell)
		set_task(taskglow, "msharingan_unglow", id)
		
		UsingMsharingan[id] = true	
		set_hudmessage(145, 0, 174, -1.0, 0.30, 0, 0.0, 1.0, 0.0, 0.0, 4)
		ShowSyncHudMsg(id, MsharinganHudSync, "%s!", HeroName)
	}
	
	new uOrigin[3], vOrigin[3], dBetween
	new players[SH_MAXSLOTS], player_num, player
	new CsTeams:idTeam = cs_get_user_team(id)
	get_user_origin(id, uOrigin)

	get_players(players, player_num, "a") 	// a=no incluir dead clients; h=hltv proxy 
	for ( new i = 0; i < player_num; i++ ) {
		player = players[i]
		if ( idTeam != cs_get_user_team(player) ) {
			get_user_origin(player, vOrigin)
			dBetween = get_distance(uOrigin, vOrigin)
			
			if ( dBetween < sharinganradius ) {
	
				if ( !HasMsharingan[player] ) {
					sh_set_stun( player, get_pcvar_float(stuntimenonMsha), get_pcvar_float(CvarNonMsharinganSpeed) )
					sh_screen_fade( player, taskglow, taskglow, 0, 0, 0, 180)		//make screen gray
	
					set_hudmessage(145, 0, 174, -1.0, 0.30, 0, 0.0, 1.0, 0.0, 0.0, 4)
					ShowSyncHudMsg(player, MsharinganHudSync, "%s!", HeroName)
				}
			}
		}
	}
}

public msharingan_unglow(id)
	sh_set_rendering(id)
	
public msharingan_loop(id)
{
	if ( !UsingMsharingan[id] || !sh_is_inround() ) return;
	
	if ( is_user_alive(id) && HasMsharingan[id] ) {
		if ( MsharinganTimer[id] > 0 ) {
			set_hudmessage(145, 0, 174, -1.0, 0.3, 0, 0.0, 1.0, 0.0, 0.0, 4)
			ShowSyncHudMsg(id, MsharinganHudSync, "%s - Te quedan ^n%d segundos de Mangekyou ", HeroName, MsharinganTimer[id] )
			MsharinganTimer[id]--
		}
		else if ( MsharinganTimer[id] == 0 ) {
			MsharinganTimer[id]--
			end_mangekyou(id)
		}
	}
}

public end_mangekyou(id)
{
	if ( !is_user_connected(id) ) return
	
	// Set Cooldown
	new Float:seconds = get_pcvar_float(CvarCooldown)
	if ( seconds > 0.0 ) sh_set_cooldown(id, seconds)
	
	set_hudmessage(145, 0, 174, -1.0, 0.3, 0, 0.0, 2.0, 0.0, 0.0, 4)
	ShowSyncHudMsg(id, MsharinganHudSync, "Usaste todo tu Chakra, Necesita descansar.")
	
	MsharinganTimer[id] = -1
	UsingMsharingan[id] = false
}
//------------------------------------------------------------------------------------------------
//				Efectos Tsukuyomi revivis al que matas				//
//------------------------------------------------------------------------------------------------
public sh_client_death(victim, attacker)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	if ( victim == attacker ) return 	// || !HasMsharingan[attacker] || !UsingMsharingan[attacker] 
	 
	 // This is from Phoenix Ty
	get_user_origin(victim, g_savedOrigin2[victim])	// Save users origin on death
	g_savedOrigin2[victim][2] += 8			// Save users origin on death
	 
	// Look for self to raise from dead
	if ( !is_user_alive(victim) && HasMsharingan[attacker] && UsingMsharingan[attacker] ) {
		new parm[1] 
		parm[0] = victim
		// Respawn him faster then Zues, let this power be used before Zues's
		// never set higher then 1.9 or lower then 0.5
		/* el task esta puesto en 0.x porque segun el mas chico se activa primero ese heroe.
		mangekyou = 0,5
		chucky = 0.6
		phoenix = 0.7
		shaman = 0.8
		dr.strange = 0.9
		majin buu = 1.0
		grandmaster = 1.1 // pero esta se superpone porque es la primera en usarse 
		uchiha revenge = 1.2
		torneo = 1.5 */
		set_task(0.5, "mangekyou_respawn", 0, parm, 1)
	} 
}

public mangekyou_respawn(parm[])
{
	new victim = parm[0]
	if ( !is_user_connected(victim) || is_user_alive(victim) || !sh_is_inround() ) return
	if ( KillCountMangekyou[victim] == get_pcvar_num(pcvarMangekyouRespawns) ) return

	emit_sound(victim, CHAN_STATIC, "shmod/mangsharingan.wav", 0.6, ATTN_NORM, 0, PITCH_NORM)
	sh_chat_message(victim, -1, "El %s te revivi√≥ para matarte otra vez en su Genjutsu.", HeroName)
	
	// Double spawn prevents the no HUD glitch
	user_spawn(victim)
	user_spawn(victim)
	KillCountMangekyou[victim]++
	// ExecuteHamB(Ham_CS_RoundRespawn, victim)	// Dont use this cause bugs
	
	emit_sound(victim, CHAN_STATIC, "ambience/3dmeagle.wav", 0.6, ATTN_NORM, 0, PITCH_NORM)
	new Float: timeglow = get_pcvar_float(CvarSlowMoTime)
	sh_screen_fade( victim, timeglow, timeglow, 0, 0, 0, 140 )		//make screen gray
	sh_set_rendering(victim, 141, 143, 144, 16, kRenderFxGlowShell)	// Glow
	set_task(3.0, "mangekyou_unglow", victim) 			// Unglow
	set_user_health(victim, 900)					// Set HP after respawn
	sh_set_godmode(victim, 0.5)
	
	mangekyou_teleport(victim) 
}

public mangekyou_teleport(victim)
{
	// Teleport the player
	set_user_origin(victim, g_savedOrigin2[victim])
	// Teleport Effects
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(11)					// TE_TELEPORT
	write_coord(g_savedOrigin2[victim][0])		// start position
	write_coord(g_savedOrigin2[victim][1])
	write_coord(g_savedOrigin2[victim][2])
	message_end()
	positionChangeTimer_mangekyou(victim)
}

public positionChangeTimer_mangekyou(victim)
{
	if ( !is_user_alive(victim) ) return
	
	new Float:velocity[3]
	get_user_origin(victim, g_lastPosition2[victim])
	Entvars_Get_Vector(victim, EV_VEC_velocity, velocity)

	if ( velocity[0]==0.0 && velocity[1]==0.0 ) {
		// Force a Move (small jump)
		velocity[0] += 20.0
		velocity[2] += 100.0
		Entvars_Set_Vector(victim, EV_VEC_velocity, velocity)
	}
	
	/* If player is stuck kill them
	new Float:origin[3], hulltype
	pev(victim, pev_origin, origin)
	hulltype = (pev (victim, pev_flags) & FL_DUCKING) ? HULL_HEAD : HULL_HUMAN
	if ( !sh_hull_vacant(victim, origin, hulltype) ) {
		user_kill(victim)
	} */
		
	set_task(0.3, "positionChangeCheck_mangekyou", victim+100)
}

public positionChangeCheck_mangekyou(victim)
{
	victim -= 100
	if ( !is_user_alive(victim) ) return

	new origin[3]
	get_user_origin(victim, origin)
	// Kill this player if Stuck in Wall!
	if ( g_lastPosition2[victim][0] == origin[0] && g_lastPosition2[victim][1] == origin[1] && g_lastPosition2[victim][2] == origin[2] && is_user_alive(victim) ) {
		user_kill(victim, 1)
		sh_chat_message(victim, -1, "Te moriste por quedar bugeado en el respawn del %s.", HeroName)
	}
}

public mangekyou_unglow(victim)
	sh_set_rendering(victim)

public sh_round_end()
{
	for (new id=0; id <= SH_MAXSLOTS; id++) {
		remove_task(id)
		KillCountMangekyou[id] = 0 
	}
}
//------------------------------------------------------------------------------------------------
//				Disconected y admincheck					//
//------------------------------------------------------------------------------------------------
public client_disconnected(id)
{
	MsharinganTimer[id] = -1
	gPlayerUltimateUsed[id] = false
	remove_task(id)
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
