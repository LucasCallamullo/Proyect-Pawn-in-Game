// DARTH MAUL! evil Sith apprentice from Star Wars - Episode I: The Phantom Menace. Double Bladed Lightsaber is his trademark.

/* CVARS - copy and paste to shconfig.cfg

//Darth Maul
darth_level 6
darth_healpoints 10			// the #of HP healed per second
darth_knifespeed 400		// speed of Darth Maul in knife mode
darth_knifemult 2.70		// multiplier for knife damage...
darth_ammo
darth_kills
darth_force

*/

/*
* v1.2 - vittu - 6/19/05
*      - Minor code clean up.
*      - Added p_ knife model.
*
* v1.1 - vittu - 12/21/04
*      -SH mod 1.17.6 and up only
*      -Model name and location changed (to follow new standard)
*      -Also only needed one of the models not both (deleted useless second model)
*      -Now heals past 100hp if you have more
*      -Fixed extra speed to use knife
*
*   Darth Maul based on {HOJ}Batman's wolverine hero which is where most of the credit should go
*/
// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[] = "Darth Maul"
new bool:gHasDarthMaulPowers[SH_MAXSLOTS+1]

new gHealPoints, gPcvarDamage, PcvarForceDarth, gPcvarCooldown

new const gDarthKnife_v[] = "models/shmod/darthmaul_knife.mdl"
new const gDarthKnife_p[] = "models/shmod/darthmaul_p_knife.mdl"

new const gDarth_sound[] = "shmod/dashjumpdarthmaul.wav"

// This is for cooldowns
new Float:gPcvarRealCD[SH_MAXSLOTS+1] 
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO DarthMaul", "1.2", "Chivas2973")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new PcvarLevel 	= register_cvar("darth_level", "8")
	new pcvarHeal	= register_cvar("darth_healpoints", "15")
	gPcvarDamage	= register_cvar("darth_knifemult", "7.0")
	PcvarForceDarth	= register_cvar("darth_force", "1300");		// force dash
	gPcvarCooldown	= register_cvar("darth_cooldown", "15")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, PcvarLevel)
	sh_set_hero_info(gHeroID, "Doble Sable de Luz Sith.", "Obtén el Sable de Luz de los Sith, que hace más daño y te da regeneración de HP. Además de un impulso de Fuerza Recargable que usas con el Click Izquierdo.")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// EVENTS
	RegisterHam(Ham_Item_Deploy, "weapon_knife", "Knife_Deploy", 1)
	register_event("Damage", "darth_damage", "b", "2!0")

	// Let Server know about Darth Maul's Varibles
	sh_set_hero_shield(gHeroID, true)
	
	// HEAL LOOP
	set_task(1.0, "darth_loop", 0, "", 0, "b")
	
	// Dash 
	RegisterHam(Ham_Weapon_PrimaryAttack, "weapon_knife", "Ham_Weapon_Attack1")
	
	gHealPoints = get_pcvar_num(pcvarHeal)
}

public plugin_precache()
{
	precache_model(gDarthKnife_v)
	precache_model(gDarthKnife_p)
	precache_sound(gDarth_sound)
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and Spawn ChangeModels				//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID == heroID ) {
		switch(mode) {
			case SH_HERO_ADD: {
				gHasDarthMaulPowers[id] = true
				gPlayerInCooldown[id] = false
				switchmodel(id)		
			}
			case SH_HERO_DROP: {
				gHasDarthMaulPowers[id] = false
			}
		}
		
		sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
	}
}
//----------------------------------------------------------------------------------------------
//				SPAWN n DEATH for COOLDOWNS
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	// Para controlar si tiene el poder
	if ( gHasDarthMaulPowers[id] ) {
	
		// Para controlar si esta en ronda y tener el cooldown real.
		if ( sh_is_inround() ) {
			if ( gPcvarRealCD[id] > 0.0 ) sh_set_cooldown(id, gPcvarRealCD[id])
			// False = Nace sin cooldowsn, True = Nace con cooldown.
			else gPlayerInCooldown[id] = false
		}
		else gPlayerInCooldown[id] = false
	}
}

public sh_client_death(id) {
	// Para obtener la cantidad real de cooldown que tiene el poder
	if ( gHasDarthMaulPowers[id] ) gPcvarRealCD[id] = sh_get_cooldown(id)
}

#if SEND_COOLDOWN
public sendDarthMaulCooldown(id)
{
	gPcvarRealCD[id] = sh_get_cooldown(id)
	return floatround(gPcvarRealCD[id]) 
}
#endif
//------------------------------------------------------------------------------------------------
//				Change weapons models						//
//------------------------------------------------------------------------------------------------
switchmodel(id)
{
	if ( get_user_weapon(id) == CSW_KNIFE ) {
		set_pev(id, pev_viewmodel2, gDarthKnife_v)
		set_pev(id, pev_weaponmodel2, gDarthKnife_p)
	}
}

public Knife_Deploy(iEnt)
{
	new id = get_pdata_cbase(iEnt, 41, 4)	// 41 y 4 son constantes van siempre
	if ( !is_user_alive(id) || !gHasDarthMaulPowers[id] ) return HAM_IGNORED; 
	
	set_pev(id, pev_viewmodel2, gDarthKnife_v)
	set_pev(id, pev_weaponmodel2, gDarthKnife_p) 
	
	return HAM_IGNORED; 
} 
//------------------------------------------------------------------------------------------------
//				Damage Effects							//
//------------------------------------------------------------------------------------------------
public darth_damage(id)
{
	if ( !is_user_alive(id) ) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasDarthMaulPowers[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarDamage) - damage)
		if (extraDamage > 0) sh_extra_damage(id, attacker, extraDamage, "knife", headshot)
	}
}
//------------------------------------------------------------------------------------------------
//				Dash Effects							//
//------------------------------------------------------------------------------------------------
public Ham_Weapon_Attack1(weaponent)			// Chidori in Left Click with Knife.
{
	new id = get_pdata_cbase(weaponent, 41, 4)
	if ( !is_user_alive(id) || !gHasDarthMaulPowers[id] ) return HAM_IGNORED
	// if( get_user_weapon(id) != CSW_KNIFE || gPlayerInCooldown[id] ) return HAM_IGNORED
	if( gPlayerInCooldown[id] ) return HAM_IGNORED
	
	DashDM(id)
	
	return HAM_IGNORED
}

public DashDM(id)
{
	new sndStop=(2<<5)
	emit_sound(id, CHAN_STATIC, gDarth_sound, 1.0, ATTN_NORM, sndStop, PITCH_NORM)
	
	// Esto trabaja asi cuanto mayor el segundo termino de vel_by_aim, mayor el dash que dara
	static Float:velocity[3]
	new PcvarVel = get_pcvar_num(PcvarForceDarth)
	velocity_by_aim(id, PcvarVel, velocity)		// def = 1900 
	set_pev(id, pev_velocity, velocity) 		// velocity[0] = 1000.0 X //velocity[1] = 1000.0 Y //velocity[2] = 100.0 Z
	velocity[2] = 70.0
	
	// Esto es para darle un glow
	sh_set_rendering(id, 255, 255, 255, 16, kRenderFxGlowShell)
	set_task(1.0, "darth_unglow", id) 
	
	// set cooldown
	new Float:seconds = get_pcvar_float(gPcvarCooldown)
	if ( seconds > 0.0 ) {
		sh_set_cooldown(id, seconds)
		gPcvarRealCD[id] = seconds
	}
}

public darth_unglow(id) sh_set_rendering(id)
//------------------------------------------------------------------------------------------------
//				Loop Health 							//
//------------------------------------------------------------------------------------------------
public darth_loop()
{
	static players[SH_MAXSLOTS], playerCount, id, i
	get_players(players, playerCount, "ah")
	
	for ( i = 0; i < playerCount; i++ ) {
		id = players[i]
		if ( !gHasDarthMaulPowers[id] || !is_user_alive(id) ) continue   
		
		sh_add_hp(id, gHealPoints)
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
