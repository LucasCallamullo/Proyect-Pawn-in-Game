// DARTH MAUL! evil Sith apprentice from Star Wars - Episode I: The Phantom Menace. Double Bladed Lightsaber is his trademark.

/* CVARS - copy and paste to shconfig.cfg

//Darth Maul
darth_level 6
darth_healpoints 10			// the #of HP healed per second
darth_knifespeed 400		// speed of Darth Maul in knife mode
darth_knifemult 2.70		// multiplier for knife damage...
darth_ammo
darth_kills
darth_force

*/

/*
* v1.2 - vittu - 6/19/05
*      - Minor code clean up.
*      - Added p_ knife model.
*
* v1.1 - vittu - 12/21/04
*      -SH mod 1.17.6 and up only
*      -Model name and location changed (to follow new standard)
*      -Also only needed one of the models not both (deleted useless second model)
*      -Now heals past 100hp if you have more
*      -Fixed extra speed to use knife
*
*   Darth Maul based on {HOJ}Batman's wolverine hero which is where most of the credit should go
*/
// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new gHeroName[]="Darth Maul"
new bool:gHasDarthMaulPowers[SH_MAXSLOTS+1]
new gPlayerMaxHealth[SH_MAXSLOTS+1]
new gHealPoints, gPcvarDamage, PcvarForceDarth, pcvarCooldown

#if SEND_COOLDOWN
	new Float:DarthMaulUsedTime[SH_MAXSLOTS+1]
#endif
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO DarthMaul", "1.2", "Chivas2973")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new PcvarLevel 	= register_cvar("darth_level", "8")
	gHealPoints	= register_cvar("darth_healpoints", "15")
	gPcvarDamage	= register_cvar("darth_knifemult", "7.0")
	PcvarForceDarth	= register_cvar("darth_force", "1300");		// force dash
	pcvarCooldown	= register_cvar("darth_cooldown", "15")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, PcvarLevel)
	sh_set_hero_info(gHeroID, "Doble Sable de Luz Sith.", "Obtén el Sable de Luz de los Sith, que hace más daño y te da regeneración de HP. Además de un impulso de Fuerza Recargable que usas con el Click Izquierdo.")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// EVENTS
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("Damage", "darth_damage", "b", "2!0")

	// HEAL LOOP
	register_srvcmd("darth_maxhealth", "darth_maxhealth")
	shRegMaxHealth(gHeroName, "darth_maxhealth")
	
	set_task(1.0, "darth_loop", 0, "", 0, "b")
	
	// Let Server know about Darth Maul's Varibles
	sh_set_hero_shield(gHeroID, true)
	
	// Dash 
	RegisterHam(Ham_Weapon_PrimaryAttack, "weapon_knife", "Ham_Weapon_Attack1")
}

public plugin_precache()
{
	precache_model("models/shmod/darthmaul_knife.mdl")
	precache_model("models/shmod/darthmaul_p_knife.mdl")
	precache_sound("shmod/dashjumpdarthmaul.wav")
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and Spawn ChangeModels				//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	 
	switch(mode) {
		case SH_HERO_ADD: {
			gHasDarthMaulPowers[id] = true
			switchmodel(id)
			gPlayerMaxHealth[id] = 100
			gPlayerInCooldown[id] = false
		}
		case SH_HERO_DROP: {
			gHasDarthMaulPowers[id] = false
		}
	}
}

public sh_client_spawn(id)
{
	if ( gHasDarthMaulPowers[id] && is_user_alive(id) ) {
		gPlayerInCooldown[id] = false
	}
}

#if SEND_COOLDOWN
public sendDarthMaulCooldown(id)
{
	new cooldown
	if (gPlayerInCooldown[id])
		cooldown = floatround( get_pcvar_num(pcvarCooldown) - get_gametime() + DarthMaulUsedTime[id] + 0.4 )
	else
		cooldown = -1
	return cooldown
}
#endif

public weaponChange(id)
{
	if ( !gHasDarthMaulPowers[id] || !is_user_alive(id) ) return

	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	// new wpnid = read_data(2)
	if ( wpnid == CSW_KNIFE ) switchmodel(id)
}

switchmodel(id)
{
	new wpnid = read_data(2)
	if (wpnid == CSW_KNIFE) {
		set_pev(id, pev_viewmodel2, "models/shmod/darthmaul_knife.mdl")
		set_pev(id, pev_weaponmodel2, "models/shmod/darthmaul_p_knife.mdl")
	}
}
//------------------------------------------------------------------------------------------------
//				Loop Health Y Damage						//
//------------------------------------------------------------------------------------------------
public darth_loop()
{
	if ( !shModActive() ) return
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		if ( gHasDarthMaulPowers[id] && is_user_alive(id) ) {
			// Let the server add the hps back since the # of max hps is controlled by it
			// I.E. Superman has more than 100 hps etc.
			new gHealPoints2 = get_pcvar_num(gHealPoints)
			shAddHPs(id, gHealPoints2, gPlayerMaxHealth[id])
		}
	}
}

public darth_maxhealth()
{
	new id[6]
	new health[9]

	read_argv(1,id,5)
	read_argv(2,health,8)

	gPlayerMaxHealth[str_to_num(id)] = str_to_num(health)
}

public darth_damage(id)
{
	if ( !is_user_alive(id) ) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasDarthMaulPowers[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarDamage) - damage)
		if (extraDamage > 0) shExtraDamage(id, attacker, extraDamage, "knife", headshot)
	}
}
//------------------------------------------------------------------------------------------------
//				Dash Effects							//
//------------------------------------------------------------------------------------------------
public Ham_Weapon_Attack1(weaponent)			// Chidori in Left Click with Knife.
{
	new id = get_pdata_cbase(weaponent, 41, 4)
	if ( !is_user_alive(id) || !gHasDarthMaulPowers[id] ) return
	if( get_user_weapon(id) != CSW_KNIFE ) return 
	
	if ( gPlayerInCooldown[id] ) return
	
	DashDM(id)
}

public DashDM(id)
{
	new sndStop=(2<<5)
	emit_sound(id, CHAN_STATIC, "shmod/dashjumpdarthmaul.wav", 1.0, ATTN_NORM, sndStop, PITCH_NORM)
	
	// Esto trabaja asi cuanto mayor el segundo termino de vel_by_aim, mayor el dash que dara
	static Float:velocity[3]
	new PcvarVel = get_pcvar_num(PcvarForceDarth)
	velocity_by_aim(id, PcvarVel, velocity)		// def = 1900 
	set_pev(id, pev_velocity, velocity) 		// velocity[0] = 1000.0 X //velocity[1] = 1000.0 Y //velocity[2] = 100.0 Z
	velocity[2] = 70.0
	
	// Esto es para darle un glow
	sh_set_rendering(id, 255, 255, 255, 16, kRenderFxGlowShell)
	set_task(1.0, "darth_unglow", id) 
	
	new Float:seconds = get_pcvar_float(pcvarCooldown)
	if ( seconds > 0.0 ) {
		sh_set_cooldown(id, seconds)
		#if SEND_COOLDOWN
			DarthMaulUsedTime[id] = get_gametime()
		#endif
	}
}

public darth_unglow(id)
	sh_set_rendering(id)
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
