// Saiyajin Race - Natural Born Warriors

/* CVARS

//Saiyajin
Saiyajin_level 10
Saiyajin_killsreq 3 // Kills Required To Reach Next SSJ Stage
Saiyajin_DmgMulti 0.10 // % Dmg added by level, say if SSJ level 1 = 0.25, SSJ level 2 = 2 * 0.25, SSJ level 3 = 3 * 0.25
saiyajin_hp 30			//HP amount multiplied by ssjlevel, ex. 30*ssj2 = +60HP (Default 30)
saiyajin_speedadd 25		//Speed added to goku_speedbase every next ssjlevel (Default 25)
*/

#include <superheromod>

//Global Variables
new gHeroID
new gHeroName[]="Saiyajin Blood"
new bool:gHasSaiyajinPower[SH_MAXSLOTS+1]

// for kill count for each player and still de speed movemente
new g_KillCount[SH_MAXSLOTS+1], g_prevWeapon[SH_MAXSLOTS+1] 

// for take de current levels
new g_SSJCurrentLevel[SH_MAXSLOTS+1], g_SSJLevel[4], Float:g_ssjSpeed[4]

new powerUp, powerUp2, gPcvarKillsreq, gPcvarSpeed
new pcvarHp, gPcvarHP, gPcvarHPMAX, gPcvarMult

// moedls for the hero 
new const gSound_P3[] 	= "shmod/goku_powerup3.wav"
new const gSound_P4[] 	= "shmod/goku_powerup4.wav"
new const gSprite_P3[] 	= "sprites/shmod/esf_powerup.spr"
new const gSprite_P4[] 	= "sprites/shmod/esf_powerup4.spr"
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Saiyajin","2.1","duper/rockell")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("Saiyajin_level", "0" )
	pcvarHp		= register_cvar("saiyajin_hp", "25")
	gPcvarSpeed	= register_cvar("saiyajin_speedadd", "15")
	gPcvarKillsreq	= register_cvar("saiyajin_killsreq", "2")
	gPcvarMult	= register_cvar("saiyajin_mult", "0.25")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Llega a transfomarte en un Super Saiyajin 4.", "Incrementa SSJ Level Matando, para tener más daño/Velocidad, Max SSJ Level 4.")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// EVENTS
	register_event("Damage", "Saiyajin_damage", "b", "2!0")
	
	// FOR SPEED
	register_event("CurWeapon", "curweapon", "be", "1=1")
	
	// LOOP
	set_task(4.0, "loadCVARS")
}

public plugin_precache()
{
	precache_sound(gSound_P3)
	precache_sound(gSound_P4)
	powerUp = precache_model(gSprite_P3)
	powerUp2 = precache_model(gSprite_P4)
}
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID == heroID ) {
		switch(mode) {
			case SH_HERO_ADD: {
				gHasSaiyajinPower[id] = true
				g_SSJCurrentLevel[id] = 0
				g_KillCount[id] = 0
			}
			case SH_HERO_DROP: {
				gHasSaiyajinPower[id] = false
			}
		}
		
		sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
	}	
}
//----------------------------------------------------------------------------------------------
//			SPAWN AND ROUND STTART
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{	
	if ( gHasSaiyajinPower[id]  ) {
		g_SSJCurrentLevel[id] = 0
		g_KillCount[id] = 0
	}		
}

public sh_round_new()
{
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		if ( !gHasSaiyajinPower[id]  ) continue
		sh_chat_message(id, gHeroID, "No tenes Ki! Mata a %d enemigos para transformarte en SSJ.", get_pcvar_num(gPcvarKillsreq) )
	}
}
//----------------------------------------------------------------------------------------------
//			EVENT DEATH N SAIYAJIN LEVELS
//----------------------------------------------------------------------------------------------
public sh_client_death(victim, attacker)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	if ( victim == attacker ) return
	
	if ( is_user_alive(attacker) && gHasSaiyajinPower[attacker] ) {
		g_KillCount[attacker] += 1
		saiyajin_evolve(attacker)
	}
}

public saiyajin_evolve(id)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	
	for ( new iLevel = 0 ; iLevel < sizeof(g_SSJLevel) ; iLevel++ ) {
		// LEVEL 
		if ( g_KillCount[id] == g_SSJLevel[iLevel] ) { // && g_SSJLevel[iLevel+1] > g_KillCount[id] ) {
			
			// create generic variables
			g_SSJCurrentLevel[id] = iLevel+1
			
			new num1 = 3 + (iLevel+1) * 2 
			new num2 = 15 * (iLevel+1)
			new parm[2]
			parm[0] = id
			parm[1] = num1
			powerUp_effect(parm) 
			set_task(0.1, "powerUp_effect", 0, parm, 2, "a", num2)		//si cambias el ultimo numero aumenta el tiempo que aparece el sprite	
											// el ultimo , x de todos era 12 18 24 30 respectivamente
											// sigo con lo de arriba 150 = 15 segundos						
			saiyajin_boost(id)
			sh_chat_message(id, gHeroID, "Te Convertiste en SSJ Nivel %d.", iLevel+1 )
			
			// some effects for each level
			if ( iLevel+1 <= 2 )
				break;
			else if ( iLevel+1 == 3 )
				emit_sound(id, CHAN_STATIC, gSound_P3, 0.6, ATTN_NORM, 0, PITCH_NORM)
			else {
				emit_sound(id, CHAN_STATIC, gSound_P4, 0.6, ATTN_NORM, 0, PITCH_NORM)
				sh_set_godmode(id, 3.0)
			}
			break; 
		}
	}
} 
//----------------------------------------------------------------------------------------------
//			BOOST EFFECTS HP AND SPEED MOVEMENT
//----------------------------------------------------------------------------------------------
public saiyajin_boost(id)
{
	if ( !gHasSaiyajinPower[id] || !is_user_alive(id) ) return
	if ( !g_SSJCurrentLevel[id] ) return

	// Speed Boost
	new speedNum = g_SSJCurrentLevel[id] - 1
	if ( get_user_maxspeed(id) < g_ssjSpeed[speedNum]) {
		set_user_maxspeed(id, g_ssjSpeed[speedNum])
	}
	
	// HP boost
	new userHealth = get_user_health(id)
	userHealth += gPcvarHP * g_SSJCurrentLevel[id]
	
	if ( userHealth <= gPcvarHPMAX )
		set_user_health(id, userHealth)
	else
		set_user_health(id, gPcvarHPMAX)
} 

public curweapon(id)
{
	if ( !gHasSaiyajinPower[id] || !is_user_alive(id) ) return
	if ( !g_SSJCurrentLevel[id] ) return

	new wpnid = read_data(2)
	if ( g_prevWeapon[id] != wpnid ) {
		switch( g_SSJCurrentLevel[id] ) {
			case 1: if ( get_user_maxspeed(id) < g_ssjSpeed[0] ) set_user_maxspeed(id, g_ssjSpeed[0])
			case 2: if ( get_user_maxspeed(id) < g_ssjSpeed[1] ) set_user_maxspeed(id, g_ssjSpeed[1])
			case 3: if ( get_user_maxspeed(id) < g_ssjSpeed[2] ) set_user_maxspeed(id, g_ssjSpeed[2])
			case 4: if ( get_user_maxspeed(id) < g_ssjSpeed[3] ) set_user_maxspeed(id, g_ssjSpeed[3])
		}
	}
	
	g_prevWeapon[id] = wpnid
}
//----------------------------------------------------------------------------------------------
//				DAMAGE EVENT
//----------------------------------------------------------------------------------------------
public Saiyajin_damage(id)
{
	if ( !is_user_alive(id) ) return
	
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return
	if ( !gHasSaiyajinPower[attacker] ) return
	
	new damage = read_data(2)
	// new headshot = bodypart == 1 ? 1 : 0
	
	if ( weapon == CSW_KNIFE && g_SSJCurrentLevel[attacker] >= 3 ) {
		// do extra damage
		new extraDamage = floatround( damage * get_pcvar_float(gPcvarMult) - damage )
		sh_extra_damage(id, attacker, extraDamage, "Knife SSJ3")	
	}
}
//----------------------------------------------------------------------------------------------
//			AURA EFFECTS FOR SUPER SAIYAJIN 
//----------------------------------------------------------------------------------------------
// Thanx to vittu for this code.
public powerUp_effect(parm[])
{
	if ( !sh_is_inround() ) return
	new id = parm[0]
	if ( !is_user_alive(id) ) return

	new Size = parm[1]
	new Origin[3], power_sprite
	
	// for select each sprite respect the level
	if ( g_SSJCurrentLevel[id] == 4 ) 
		power_sprite = powerUp2
		
	else
		power_sprite = powerUp
	
	new players[SH_MAXSLOTS], pnum, idOthers
	get_players(players, pnum, "a")

	// Show a powerup to all alive players except the one being powered up.
	for (new i = 0; i < pnum; i++) {
		idOthers = players[i]
		//if ( !is_user_alive(idOthers) ) continue		//este es para ver el sprite en primera y tercera persona
		// if ( !is_user_alive(idOthers) || idOthers == id ) continue

		get_user_origin(id, Origin)

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(power_sprite)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]+5) // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(power_sprite)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]-5)    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(power_sprite)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]+5)
		write_coord(Origin[2]+10)
		write_short(power_sprite)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]-5)
		write_coord(Origin[2]+10)
		write_short(power_sprite)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()
	}
}
//----------------------------------------------------------------------------------------------
//				LOAD CVARS FOR NO CALLS EVERY TIME
//----------------------------------------------------------------------------------------------
public plugin_cfg()  
	loadCVARS()

public loadCVARS()
{
	gPcvarHP 	= get_pcvar_num(pcvarHp)
	gPcvarHPMAX 	= 2000
	
	// These cvars are checked very often
	g_SSJLevel[0] 	= get_pcvar_num(gPcvarKillsreq)
	g_SSJLevel[1]	= g_SSJLevel[0] * 2
	g_SSJLevel[2] 	= g_SSJLevel[0] * 3 + 1
	g_SSJLevel[3] 	= g_SSJLevel[0] * 4 + 2
	
	g_ssjSpeed[0] 	= 700.0
	g_ssjSpeed[1] 	= g_ssjSpeed[0] + get_pcvar_float(gPcvarSpeed)
	g_ssjSpeed[2] 	= g_ssjSpeed[1] + get_pcvar_float(gPcvarSpeed)
	g_ssjSpeed[3] 	= g_ssjSpeed[2] + get_pcvar_float(gPcvarSpeed)
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
