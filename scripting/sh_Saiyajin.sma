// Saiyajin Race - Natural Born Warriors

/* CVARS

//Saiyajin
Saiyajin_level 10
Saiyajin_killsreq 3 // Kills Required To Reach Next SSJ Stage
Saiyajin_DmgMulti 0.10 // % Dmg added by level, say if SSJ level 1 = 0.25, SSJ level 2 = 2 * 0.25, SSJ level 3 = 3 * 0.25

saiyajin_hpl 30			//HP amount multiplied by ssjlevel, ex. 30*ssj2 = +60HP (Default 30)
saiyajin_hpmax 500			//Max HP that can be gained (Default 500)
saiyajin_speedbase 300		//Initial Speed boost for ssjlevel 1, only sets if you are slower (Default 300)
saiyajin_speedadd 25		//Speed added to goku_speedbase every next ssjlevel (Default 25)
*/

#include <superheromod>

//Global Variables
new gHeroID
new gHeroName[]="Saiyajin Blood"
new bool:gHasSaiyajinPower[SH_MAXSLOTS+1]
new g_KillCount = 0
new g_SSJCurrentLevel[SH_MAXSLOTS+1]
new powerUp
new powerUp2
new Float:g_ssjSpeed[4]
new g_prevWeapon[SH_MAXSLOTS+1] 
new g_SSJLevel[4]

new g_lastWeapon[SH_MAXSLOTS+1]
new bool:g_weaponSwitched[SH_MAXSLOTS+1]
new bool:g_betweenRounds

new gPcvarKillsreq
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Saiyajin","2.1","duper/rockell")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("Saiyajin_level", "0" )
	register_cvar("saiyajin_hpl", "30")
	register_cvar("saiyajin_hpmax", "500")
	register_cvar("saiyajin_speedbase", "300")
	register_cvar("saiyajin_speedadd", "25")
	gPcvarKillsreq	= register_cvar("Saiyajin_killsreq", "2" )
	register_cvar("Saiyajin_DmgMulti", "0.25" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Llega a transfomarte en un Super Saiyajin 4.", "Incrementa SSJ Level Matando, para tener más daño/Velocidad, Max SSJ Level 4.")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("Saiyajin_init", "Saiyajin_init")
	shRegHeroInit(gHeroName, "Saiyajin_init")

	// EVENTS
	register_event("Damage", "Saiyajin_damage", "b", "2!0")
	register_event("CurWeapon", "curweapon", "be", "1=1")
	
	// LOG EVENTS
	register_logevent("round_start", 2, "1=Round_Start")
	register_logevent("round_end", 2, "1=Round_End")
	register_logevent("round_end", 2, "1&Restart_Round_")
	
	// CVARS WARNINGS
	if (!cvar_exists("Saiyajin_killsreq")) register_cvar("Saiyajin_killsreq", "2" )
	if (!cvar_exists("Saiyajin_DmgMulti")) register_cvar("Saiyajin_DmgMulti", "0.02" )
}
//----------------------------------------------------------------------------------------------
public Saiyajin_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has GreenLantern
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	
	gHasSaiyajinPower[id] = (hasPowers!=0)

	if ( !hasPowers && gHasSaiyajinPower[id] ) {
		shRemSpeedPower(id)
		}
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()  
{
	loadCVARS()
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	// These cvars are checked very often
	g_SSJLevel[0] = get_cvar_num("Saiyajin_killsreq")
	g_SSJLevel[1] = g_SSJLevel[0] * 2
	g_SSJLevel[2] = g_SSJLevel[0] * 3
	g_SSJLevel[3] = g_SSJLevel[0] * 4 
	
	g_ssjSpeed[0] = get_cvar_float("saiyajin_speedbase")
	g_ssjSpeed[1] = g_ssjSpeed[0] + get_cvar_float("saiyajin_speedadd")
	g_ssjSpeed[2] = g_ssjSpeed[1] + get_cvar_float("saiyajin_speedadd")
	g_ssjSpeed[3] = g_ssjSpeed[2] + get_cvar_float("saiyajin_speedadd")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound("shmod/goku_powerup3.wav")
	precache_sound("shmod/goku_powerup4.wav")
	powerUp = precache_model("sprites/shmod/esf_powerup.spr")
	powerUp2 = precache_model("sprites/shmod/esf_powerup4.spr")
}
//----------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{	
	if (gHasSaiyajinPower[id]  && is_user_alive(id)) {
		g_KillCount = 0
		g_SSJCurrentLevel[id] = 0
	}
	
	if (g_KillCount == 0 && gHasSaiyajinPower[id]  && is_user_alive(id)) {
		sh_chat_message(id, gHeroID, "No tenes Ki! Mata a %d enemigos para transformarte en SSJ.", get_pcvar_num(gPcvarKillsreq))
	}
}
//----------------------------------------------------------------------------------------------
public sh_client_death(victim, attacker)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	
	if (is_user_alive(attacker) && victim != attacker && gHasSaiyajinPower[attacker])
		{
		g_KillCount = g_KillCount + 1
		
		new id = attacker
		Saiyajin_Evolve(id)
		}
	 
	//esta para el funcionamiento del cambio de arma sin perder velocidad pero no se si sirve xd 
	if (g_lastWeapon[attacker] != CSW_KNIFE) shSwitchWeaponID(attacker, g_lastWeapon[attacker])
	g_weaponSwitched[attacker] = false
	
}
//----------------------------------------------------------------------------------------------
public Saiyajin_Evolve(id)
{
	if (!shModActive()) return
	
	// Remember this weapon...   // esto para la velocidad funcione correctamente
	new clip, ammo, weaponID = get_user_weapon(id, clip, ammo)
	g_lastWeapon[id] = weaponID
	g_weaponSwitched[id] = true
	loadCVARS()
	
	if (gHasSaiyajinPower[id] && is_user_alive(id)) {
		// Para el Ssj 1
		if (g_KillCount == get_cvar_num("Saiyajin_killsreq") && g_KillCount >= g_SSJLevel[0] && g_KillCount < g_SSJLevel[1]) {
			if (g_SSJCurrentLevel[id] < 1) 
				{
				new parm[2]
				parm[0] = id 
				parm[1] = 5 
				powerUp_effect(parm) 
				set_task(0.1, "powerUp_effect", 0, parm, 2, "a", 15)	// el ultimo , x de todos era 12 18 24 30 respectivamente
				 
				g_SSJCurrentLevel[id] = 1
				saiyajin_boost(id)
				sh_chat_message(id, gHeroID, "[%s] Te Convertiste en SSJ Nivel 1.", gHeroName)
				}
			}
		
		// Para el Ssj 2
		else if (g_KillCount == get_cvar_num("Saiyajin_killsreq") * 2 && g_KillCount >= g_SSJLevel[1] && g_KillCount < g_SSJLevel[2]) {
			if (g_SSJCurrentLevel[id] < 2) 
				{
				new parm[2]
				parm[0] = id 
				parm[1] = 7 
				powerUp_effect(parm) 
				set_task(0.1, "powerUp_effect", 0, parm, 2, "a", 25)
				
				g_SSJCurrentLevel[id] = 2
				saiyajin_boost(id)
				sh_chat_message(id, gHeroID, "[%s] Te Convertiste en SSJ Nivel 2.", gHeroName)
				}
			}
		
		// Para el Ssj 3
		else if (g_KillCount == get_cvar_num("Saiyajin_killsreq") * 3 && g_KillCount >= g_SSJLevel[2] && g_KillCount < g_SSJLevel[3]) {
			shGlow(id, 255, 255, 000)
			if (g_SSJCurrentLevel[id] < 3) 
				{
				new parm[2]
				parm[0] = id 
				parm[1] = 9 
				powerUp_effect(parm) 
				set_task(0.1, "powerUp_effect", 0, parm, 2, "a", 35)
				emit_sound(id, CHAN_STATIC, "shmod/goku_powerup3.wav", 0.8, ATTN_NORM, 0, PITCH_NORM)
				
				g_SSJCurrentLevel[id] = 3
				saiyajin_boost(id)
				sh_chat_message(id, gHeroID, "[%s] Te Convertiste en SSJ Nivel 3.", gHeroName)
				}
			}
		
		// Para el Ssj 4
		else if (g_KillCount == get_cvar_num("Saiyajin_killsreq") * 4 && g_KillCount >= g_SSJLevel[3]) {
			shGlow(id, 255, 0, 23)
			if (g_SSJCurrentLevel[id] < 4) 
				{
				new parm[2]
				parm[0] = id 
				parm[1] = 11 
				powerUp_effect(parm) 
				set_task(0.1, "powerUp_effect2", 0, parm, 2, "a", 95) //si cambias el ultimo numero aumenta el tiempo que aparece el sprite	
				emit_sound(id, CHAN_STATIC, "shmod/goku_powerup4.wav", 0.8, ATTN_NORM, 0, PITCH_NORM)        // sigo con lo de arriba 150 = 15 segundos
				
				g_SSJCurrentLevel[id] = 4
				saiyajin_boost(id)					
				sh_set_godmode(id, 3.0)		
				sh_chat_message(id, gHeroID, "[%s] Te Convertiste en el Legendario SSJ Level 4.", gHeroName)	
				}
			}
		}
} 
//----------------------------------------------------------------------------------------------
public saiyajin_boost(id)
{
	if ( !shModActive() || !gHasSaiyajinPower[id] || !is_user_alive(id) || g_betweenRounds ) return
	if ( !g_SSJCurrentLevel[id] ) return

	// Speed Boost
	new speedNum = g_SSJCurrentLevel[id] - 1
	if ( get_user_maxspeed(id) < g_ssjSpeed[speedNum]) {
		set_user_maxspeed(id, g_ssjSpeed[speedNum])
	}

	// HP boost
	new userHealth = get_user_health(id)
	if ( userHealth < get_cvar_num("saiyajin_hpmax") ) {
		new addHP = get_cvar_num("saiyajin_hpl") * g_SSJCurrentLevel[id]
		if ( userHealth + addHP > get_cvar_num("saiyajin_hpmax") ) {
			set_user_health(id, get_cvar_num("saiyajin_hpmax") )
		}
		else {
			set_user_health(id, userHealth + addHP)
		}
	}
} 
//----------------------------------------------------------------------------------------------
public curweapon(id)
{
	if (!shModActive() || !gHasSaiyajinPower[id] || !is_user_alive(id)) return
	
	if (!g_SSJCurrentLevel[id]) return

	new wpnid = read_data(2)

	if ( g_prevWeapon[id] != wpnid ) {
		switch(g_SSJCurrentLevel[id]) {
			case 1: if ( get_user_maxspeed(id) < g_ssjSpeed[0] ) set_user_maxspeed(id, g_ssjSpeed[0])
			case 2: if ( get_user_maxspeed(id) < g_ssjSpeed[1] ) set_user_maxspeed(id, g_ssjSpeed[1])
			case 3: if ( get_user_maxspeed(id) < g_ssjSpeed[2] ) set_user_maxspeed(id, g_ssjSpeed[2])
			case 4: if ( get_user_maxspeed(id) < g_ssjSpeed[3] ) set_user_maxspeed(id, g_ssjSpeed[3])
		}
	}
	g_prevWeapon[id] = wpnid
}
//----------------------------------------------------------------------------------------------
public round_end()
{
	g_betweenRounds = true
	
	for (new id=1; id <= SH_MAXSLOTS; id++) {
		if ( gHasSaiyajinPower[id] ) {
			g_SSJCurrentLevel[id] = 0
			shResetSpeed(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public round_start()
{
	g_betweenRounds = false
}
//----------------------------------------------------------------------------------------------
public Saiyajin_damage(id)
{
	if ( !shModActive() || !is_user_alive(id) ) return
	
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	
	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	new damage = read_data(2)
	new headshot = bodypart == 1 ? 1 : 0
	
	if ( gHasSaiyajinPower[attacker] && weapon == CSW_P90 && is_user_alive(id) && ( g_SSJCurrentLevel[attacker] == 1 )) {
		// do extra damage
		new extraDamage = floatround( ( damage * get_cvar_float("Saiyajin_DmgMulti")) - damage )
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "p90", headshot )		//entre las " " iba "Saiyajindamage"
	}
	
	if ( gHasSaiyajinPower[attacker] && weapon == CSW_MP5NAVY && is_user_alive(id) && ( g_SSJCurrentLevel[attacker] == 2 ) ) {
		// do extra damage
		new extraDamage = floatround( ( get_cvar_float("Saiyajin_DmgMulti") * damage * 2 ) - damage )
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "mp5navy", headshot )
	}
	
	if ( gHasSaiyajinPower[attacker] && weapon == CSW_DEAGLE && is_user_alive(id) && ( g_SSJCurrentLevel[attacker] == 3 ) ) {
		// do extra damage
		new extraDamage = floatround( ( get_cvar_float("Saiyajin_DmgMulti") * damage * 3 ) - damage )
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "deagle", headshot )
	}
	
	if ( gHasSaiyajinPower[attacker] && weapon == CSW_KNIFE && is_user_alive(id) && ( g_SSJCurrentLevel[attacker] == 4 ) ) {
		// do extra damage
		new extraDamage = floatround( ( get_cvar_float("Saiyajin_DmgMulti") * damage * 4 ) - damage )
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "knife", headshot )	
	}
}
//----------------------------------------------------------------------------------------------
// Thanx to vittu for this code.
public powerUp_effect(parm[])
{
	if (!shModActive() || g_betweenRounds ) return
	
	new id = parm[0]

	if ( !is_user_alive(id) ) return

	new Size = parm[1]
	new players[SH_MAXSLOTS], pnum
	new idOthers, Origin[3]

	get_players(players, pnum, "a")

	// Show a powerup to all alive players except the one being powered up.
	for (new i = 0; i < pnum; i++) {
		idOthers = players[i]
		//if ( !is_user_alive(idOthers) ) continue		//este es para ver el sprite en primera y tercera persona
		if ( !is_user_alive(idOthers) || idOthers == id ) continue

		get_user_origin(id, Origin)

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]+5) // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]-5)    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]+5)
		write_coord(Origin[2]+10)
		write_short(powerUp)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]-5)
		write_coord(Origin[2]+10)
		write_short(powerUp)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()
	}
}
//----------------------------------------------------------------------------------------------
// Thanx to vittu for this code.
public powerUp_effect2(parm[])
{
	if (!shModActive() || g_betweenRounds ) return
	
	new id = parm[0]

	if ( !is_user_alive(id) ) return

	new Size = parm[1]
	new players[SH_MAXSLOTS], pnum
	new idOthers, Origin[3]

	get_players(players, pnum, "a")

	// Show a powerup to all alive players except the one being powered up.
	for (new i = 0; i < pnum; i++) {
		idOthers = players[i]
		//if ( !is_user_alive(idOthers) ) continue
		if ( !is_user_alive(idOthers) || idOthers == id ) continue

		get_user_origin(id, Origin)

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp2)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]+5) // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp2)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0]-5)    // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(powerUp2)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]+5)
		write_coord(Origin[2]+10)
		write_short(powerUp2)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycl
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)            // TE_SPRITE
		write_coord(Origin[0])    // center position
		write_coord(Origin[1]-5)
		write_coord(Origin[2]+10)
		write_short(powerUp2)    // sprite index
		write_byte(Size)        // scale in 0.1's
		write_byte(50)            // brightness
		message_end()
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
