//Agent Zero

/* CVARS - copy and paste to shconfig.cfg

//Agent Zero
agentz_level 9		//nivel al que te dan el heroe.
agentz_cooldown 20	//cada cuanto tiempo puede llegar a remover el godmode de un enemigo
agentz_showdamage 1	//mostrar el daño que haces 1=si; 0=no
agentz_showchat 1	//mostrar el chat de vivos y muertos, 1=si;0=no

*/

#include <superheromod>
// #include <Vexd_Utilities>

new gHeroID
new const gHeroName[]="Agent Zero"
new bool:gHasAgent[SH_MAXSLOTS+1]
new Float:gPunchAngle[3] = {0.0,0.0,0.0}

new gPcvarCooldown
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Agent Zero", "1.0", "Freecode")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("agentz_level", "9")
	gPcvarCooldown = register_cvar("agentz_cooldown", "20")	
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "No Recoil.", "No Recoil cuando disparas, Posibilidad de Remover el Godmode al que le estas disparando!")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// GOD REMOVAL LOOP
	set_task(0.1, "agentz_loop", _, _, _, "b")
}
//------------------------------------------------------------------------------------------------
//					INIT y SPAWN						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	 
	switch(mode) {
		case SH_HERO_ADD: {
			gHasAgent[id] = true
			gPlayerInCooldown[id] = false
		}
		case SH_HERO_DROP: {
			gHasAgent[id] = false
		}
	}
}

public sh_client_spawn(id)
{
	if ( gHasAgent[id] ) gPlayerInCooldown[id] = false
}

public client_PreThink(id)
// public client_prethink(id)
{
	if(gHasAgent[id] && is_user_alive(id)) {
		entity_set_vector(id,EV_VEC_punchangle,gPunchAngle);
	}
}

public agentz_loop()
{
	if ( !sh_is_active() ) return

	static players[SH_MAXSLOTS], playerCount, id, i
	static tid, tbody
	get_players(players, playerCount, "ah")

	for ( i = 0; i < playerCount; i++ ) {
		id = players[i]

		if ( !gHasAgent[id] || gPlayerInCooldown[id] ) continue

		get_user_aiming(id, tid, tbody)

		if ( is_user_alive(tid) && (cs_get_user_team(id) != cs_get_user_team(tid) || sh_friendlyfire_on()) && get_user_godmode(tid) == 1 ) {
			set_user_godmode(tid, 0)

			new Float:cooldown = get_pcvar_float(gPcvarCooldown)
			if ( cooldown > 0.0 ) sh_set_cooldown(id, cooldown)
		}
	}
}

public client_connect(id)
	gHasAgent[id] = false
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
