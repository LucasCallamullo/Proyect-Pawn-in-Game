// T-800- Robot powers
/* CVARS - copy and paste to shconfig.cfg

//T-800
t800_level 8
t800_time 10		        //How long is T-800 mode
t800_cooldown 20		//Whats the cooldown of T-800 mode
t800_paramult 5		    //how strong is the para
t800_godtime 2.0	//tiempo que va  aestar en godtime durante terminator mode

*/
// 1 = send another plugins information about cooldown, 0 = don't send
#define SEND_COOLDOWN 1

#include <superheromod>

// VARIABLES
new gHeroID
new gHeroName[] = "Terminator"
new bool:gHasT800Power[SH_MAXSLOTS+1]

new gT800Timer[SH_MAXSLOTS+1]
new bool:gMorphed[SH_MAXSLOTS+1]

new gKills, gmsgScreenFade, gMsgSync
new gPcvarCooldown, gPcvarGodtime, gPcvarTime, gPcvarParaMult

// This is for cooldowns
new Float:gPcvarRealCD[SH_MAXSLOTS+1] 

new const gMachine_v[] = "models/shmod/t800_m249.mdl"
new const gMachine_p[] = "models/shmod/t800_minigun.mdl"

new const gPlayer_Model[] = "models/player/terminator/terminator.mdl"
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO T-800","2.0","Bum_Boy16")
 
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel	= register_cvar("t800_level", "8");
	gPcvarTime	= register_cvar("t800_time", "10");
	gPcvarCooldown	= register_cvar("t800_cooldown", "20");
	gPcvarParaMult	= register_cvar("t800_paramult", "4.5");
	gPcvarGodtime	= register_cvar("t800_godtime", "2.0");

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Podes convertirte en Terminator.", "Tenes una Machinegun para matar por unos cuantos segundos. - Pone en say /bind para aprender a bindear.");
	sh_set_hero_bind(gHeroID);
  
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
        // Model Change
	register_event("CurWeapon","weaponChange","be","1=1")
	
        // Extra Damage
	register_event("Damage", "t800_damage", "b", "2!0")
	
	// LOOP
	set_task(1.0,"t800_loop",0,"",0,"b")

	gmsgScreenFade = get_user_msgid("ScreenFade")
	gMsgSync = CreateHudSyncObj()
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_model(gMachine_v)
	precache_model(gMachine_p)
	precache_model(gPlayer_Model) 
}
//------------------------------------------------------------------------------------------------
//				Hero INIT and KEY						//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) 
{ 
	if ( heroID != gHeroID ) return
    
	switch(mode) {
		case SH_HERO_ADD: {
			gHasT800Power[id] = true
			gPlayerInCooldown[id] = false
			gMorphed[id] = false
			gT800Timer[id] = -1
		}
		case SH_HERO_DROP: {
			gHasT800Power[id] = false;
			gT800Timer[id] = -1
			t800_endmode(id)
		}
	}
}

public sh_hero_key(id, heroID, key) 
{ 
	if ( heroID != gHeroID || !sh_is_inround() ) return;
	if ( !is_user_alive(id) || !gHasT800Power[id] ) return;
    
	if ( key == SH_KEYDOWN ) {
		
		if ( gPlayerUltimateUsed[id] || gT800Timer[id] > 0 ) {
			playSoundDenySelect(id)
			return
		}
		
		set_hudmessage(255,0,0,-1.0,0.3, 0, 0.0, 1.0,0.0,0.0,4)
		ShowSyncHudMsg(id, gMsgSync, "Te Transformaste en Terminator!!")
		
		// set the timer for the hero
		gT800Timer[id] = get_pcvar_num(gPcvarTime)+1
		
		// set effects
		sh_give_weapon(id, CSW_M249, true)
		switchmodel(id)
		sh_set_godmode(id, get_pcvar_float(gPcvarGodtime))
		t800_morph_unmoprh(id)
		
		gKills = get_user_frags(id)
		
		// Set Cooldown
		new Float:seconds = get_pcvar_float(gPcvarCooldown)
		if ( seconds > 0.0 ) {
			sh_set_cooldown(id, seconds)
			gPcvarRealCD[id] = seconds
		}
	}
}
#if SEND_COOLDOWN
public sendT800Cooldown(id)
{
	gPcvarRealCD[id] = sh_get_cooldown(id)
	return floatround(gPcvarRealCD[id])  
}
#endif
//------------------------------------------------------------------------------------------------
//					Spawn n Death 						//
//------------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( gHasT800Power[id] ) {
		// esto es necesario asi para que no se choque en un nuevo spwan si muere en terminator mode
		gMorphed[id] = false
		set_task(1.0, "t800_endmode", id)
		
		// Para controlar si esta en ronda y tener el cooldown real.
		if ( sh_is_inround() ) {
			if ( gPcvarRealCD[id] > 0.0 ) sh_set_cooldown(id, gPcvarRealCD[id])
			// False = Nace sin cooldowsn, True = Nace con cooldown.
			else gPlayerInCooldown[id] = false
		}
		// if is a new round set cooldown in zero
		else gPlayerInCooldown[id] = false
	} 
} 

public sh_client_death(id) 
{
	// Para obtener la cantidad real de cooldown que tiene el poder
	if ( gHasT800Power[id] ) {
		t800_endmode(id)
		gPcvarRealCD[id] = sh_get_cooldown(id)
	}
}
//------------------------------------------------------------------------------------------------
//				Weapon Model						//
//------------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !gHasT800Power[id] || !is_user_alive(id) ) return

	new wpnid = read_data(2)
	if ( wpnid == CSW_M249 && gT800Timer[id] >= 0 ) 
		switchmodel(id)
}

public switchmodel(id)
{
	if ( get_user_weapon(id) == CSW_M249 ) {
		set_pev(id, pev_viewmodel2, gMachine_v)
		set_pev(id, pev_weaponmodel2, gMachine_p)
	}
}
//------------------------------------------------------------------------------------------------
//				LOOP EVENT							//
//------------------------------------------------------------------------------------------------
public t800_loop()
{	
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		// if ( gHasT800Power[id] && is_user_alive(id)  )  {
		if ( !gHasT800Power[id] || !is_user_alive(id) || gT800Timer[id] < 0 ) continue
		
		if ( gT800Timer[id] > 0 ) {
			set_hudmessage(255,0,0,-1.0,0.3, 0, 0.0, 1.0,0.0,0.0,4)
			ShowSyncHudMsg(id, gMsgSync, "Tenes %d segundos para dejar de ser Terminator^nApurate a matar a tus enemigos.", gT800Timer[id])

			// Make sure still on para
			if ( get_user_weapon(id) != CSW_M249 ) {
				sh_give_weapon(id, CSW_M249, true)
			}
			
			// red screen on para
			message_begin(MSG_ONE,gmsgScreenFade, {0,0,0}, id)
			write_short(15)
			write_short(15)
			write_short(12)
			write_byte(255)
			write_byte(0)
			write_byte(0)
			write_byte(50)
			message_end()
		}
		
		else if ( gT800Timer[id] == 0 ) {
			t800_endmode(id)
			sh_drop_weapon(id, CSW_M249, true)
		}	
		gT800Timer[id]--
	}
}

public t800_endmode(id)
{
	gT800Timer[id] = -1
	setScreenFlash(id, 0, 0, 0, 1, 0)
	 
	new totalkill = get_user_frags(id) - gKills
	if ( totalkill > 0 ) {
		set_hudmessage(255,0,0,-1.0, 0.3, 0, 0.0, 3.0,0.0,0.0,4)
		ShowSyncHudMsg(id, gMsgSync, "Modo Terminator Termino, Mataste a %d persona%s.", totalkill, (totalkill == 1) ? "" : "s");
	}

	if ( gMorphed[id] && is_user_connected(id) )
		t800_morph_unmoprh(id)
}
//------------------------------------------------------------------------------------------------
//				MOPRH AND UNMOPRH						//
//------------------------------------------------------------------------------------------------
public t800_morph_unmoprh(id)
{
	if ( gMorphed[id] ) {
		cs_reset_user_model(id)
		gMorphed[id] = false
	}
	else {
		cs_set_user_model(id, "terminator")
		gMorphed[id] = true
	}
}
//------------------------------------------------------------------------------------------------
//				DAMAGE EVENT						//
//------------------------------------------------------------------------------------------------
public t800_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasT800Power[attacker] && weapon == CSW_M249 && gT800Timer[id] > 0 ) {
		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(gPcvarParaMult) - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "m249", headshot )
	}
}

/*
public drop_para(id)
{
	engclient_cmd(id,"drop","weapon_m249")   

	new iCurrent = -1
	new Float:weapvel[3]

	while ( (iCurrent = FindEntity(iCurrent, "weaponbox")) > 0 ) {
		//Skip anything not owned by this client
		if ( Entvars_Get_Edict(iCurrent, EV_ENT_owner) != id) continue
		Entvars_Get_Vector(iCurrent, EV_VEC_velocity, weapvel)
		//If Velocities are all Zero its on the ground already and should stay there
		if (weapvel[0] == 0.0 && weapvel[1] == 0.0 && weapvel[2] == 0.0) continue
		RemoveEntity(iCurrent)
	}
}

new wpnid = read_data(2)
		if (wpnid != CSW_KNIFE && wpnid > 0) {
			new wpn[32]
			get_weaponname(wpnid,wpn,31)
			engclient_cmd(id,wpn)
		} 
*/
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
