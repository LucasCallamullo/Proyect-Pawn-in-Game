/* Plugin generated by AMXX-Studio */
#define ACTIVE_POWERS_INFO 1	// 1 - Enabled, 0 - Disabled

#include <superheromod> 


enum _:PowerType {
	Batman, 
	Fartman,
	ColaLover,
	Penguin,
	
	DarthMaul,
	ObiWan, 
	
	UchihaLevel,
	U_Amaterasu,
	U_Chidori
}

new gHeroNames[PowerType][] = {
	"Batman",
	"TiraPedos",
	"Cola Lover",
	"Penguin",
	
	"Darth Maul",
	"Obi Wan Kenobi",
	
	"Uchiha's Revenge",
	"Uchiha's Revenge",
	"Uchiha's Revenge"
}

new gHeroHud[PowerType][] = {
	"[SG]",
	"[SG]",
	"[FB]",
	"[HE]",
	
	"Darth Maul",
	"Obi Wan",
	
	"NVL",
	"Amaterasu",
	"Chidori"
}

new gHeroID[PowerType]; 
new bool:gHasPower[PowerType][SH_MAXSLOTS+1];
new gCooldown[PowerType][SH_MAXSLOTS+1];
new gForward[PowerType]; 

new MonitorHudSync
new const TaskClassname[] = "monitorloop"
//----------------------------------------------------------------------------------------------
public plugin_init() 
{
	register_plugin("plugin CooldownPasivos", "2.0", "Lucas Cab Arje")
	
	gForward[Batman] 	= CreateMultiForward("sendBatmanCooldown", ET_CONTINUE, FP_CELL);
	gForward[ColaLover] 	= CreateMultiForward("sendColaLoverCooldown", ET_CONTINUE, FP_CELL);
	gForward[Penguin] 	= CreateMultiForward("sendPenguinCooldown", ET_CONTINUE, FP_CELL);
	gForward[Fartman]	= CreateMultiForward("sendFartmanCooldown", ET_CONTINUE, FP_CELL);
	gForward[DarthMaul]	= CreateMultiForward("sendDarthMaulCooldown", ET_CONTINUE, FP_CELL);
	gForward[ObiWan]	= CreateMultiForward("sendObiwanCooldown", ET_CONTINUE, FP_CELL);
	
	// Uchiha's revenge
	gForward[UchihaLevel] 	= CreateMultiForward("sendUchihaLevel", ET_CONTINUE, FP_CELL);
	gForward[U_Chidori] 	= CreateMultiForward("sendUchihaChidori", ET_CONTINUE, FP_CELL);
	gForward[U_Amaterasu] 	= CreateMultiForward("sendUchihaAmaterasu", ET_CONTINUE, FP_CELL);

	
	// Todo esto es del Hud
	new monitor = engfunc(EngFunc_CreateNamedEntity, engfunc(EngFunc_AllocString, "info_target"))
	if (monitor) {
		set_pev(monitor, pev_classname, TaskClassname)
		set_pev(monitor, pev_nextthink, get_gametime() + 0.1)
		register_forward(FM_Think, "monitor_think2")
	}
	
	MonitorHudSync = CreateHudSyncObj()
	
	set_task(1.0, "loopMain2", _, _, _, "b")	// Esta tarea es de los cooldowns
	set_task(0.2, "cache_id2");   		// we need to let superhero cache all the heros to avoid issues
}
//----------------------------------------------------------------------------------------------
//			Set de ghero's
//----------------------------------------------------------------------------------------------
public cache_id2() {
	for (new i = 0; i < PowerType; i++) 
		gHeroID[i] = sh_get_hero_id(gHeroNames[i]);
}

public sh_hero_init(id, heroID, mode)
{	
	for (new i = 0; i < PowerType; i++) {
		if (gHeroID[i] == heroID)
			gHasPower[i][id] = mode ? true : false;
	}
}
//----------------------------------------------------------------------------------------------
//			LOOOP MAIN
//----------------------------------------------------------------------------------------------
public loopMain2()
{	
	static players[SH_MAXSLOTS], playerCount, id, i
	get_players(players, playerCount, "ah")

	for ( i = 0; i < playerCount; i++ ) {
		id = players[i]
		if ( !is_user_connected(id) || !is_user_alive(id) ) continue
		get_active_powers_info(id)
	} 
}

public get_active_powers_info(id)
{
	new bool:flag = false
	static functionReturn, i
	
	for ( i = 0; i < PowerType; i++ ) {
		ExecuteForward(gForward[i], functionReturn, id);
		if (gCooldown[i][id] != functionReturn) {
			gCooldown[i][id] = functionReturn;
			flag = true;
		}
	} 
	
	if (flag) 
		monitor_think2(id)	
} 
//----------------------------------------------------------------------------------------------
// 					showhud(id)
//----------------------------------------------------------------------------------------------
public monitor_think2(ent)		
{
	if ( !pev_valid(ent) ) return FMRES_IGNORED

	static class[32]
	pev(ent, pev_classname, class, charsmax(class))
	if ( equal(class, TaskClassname) ) {
		static players[32], count, i, id
		static temp[128]
		get_players(players, count, "ch")

		for ( i = 0; i < count; i++ ) {
			id = players[i] 
			if ( !is_user_alive(id) ) continue 	// esto es para que no siga si no esta vivo el id
			
			temp[0] = '^0'
			static len, powerT
			len = 0
			
			for ( powerT = 0; powerT < PowerType; powerT++ ) {
				switch (powerT) {
					// grenades
					case Batman, Fartman, ColaLover, Penguin:
						if ( gHasPower[powerT][id] ) {
							if ( gCooldown[powerT][id] > 0 ) 
								len += formatex(temp[len], charsmax(temp) - len, "%s: %i %s", gHeroHud[powerT], gCooldown[powerT][id], (powerT == Penguin) ? "^n" : "| ");
							else
								len += formatex(temp[len], charsmax(temp) - len, "%s: ON %s", gHeroHud[powerT], (powerT == Penguin) ? "^n" : "| ")
						}
					
					// others
					case DarthMaul, ObiWan:
						if ( gHasPower[powerT][id] ) {
							if ( gCooldown[powerT][id] > 0 ) 
								len += formatex(temp[len], charsmax(temp) - len, "%s: %i %s", gHeroHud[powerT], gCooldown[powerT][id], (powerT == ObiWan) ? "^n" : "| ");
							else
								len += formatex(temp[len], charsmax(temp) - len, "%s: ON %s", gHeroHud[powerT], (powerT == ObiWan) ? "^n" : "| ")
						}
					
					// uchiha'revenge
					case UchihaLevel, U_Amaterasu, U_Chidori:
						if ( gHasPower[powerT][id] ) {
							len += formatex(temp[len], charsmax(temp) - len, "%s: %i %s", gHeroHud[powerT], gCooldown[powerT][id], (powerT == U_Chidori) ? "^n" : "| ");
						}
				}
			}
				
			set_hudmessage(61, 0, 205, -0.01, 0.65, 0, 0.0, 1.0, 0.0, 0.0)
			ShowSyncHudMsg(id, MonitorHudSync, "%s", temp)	//agregado
		}
	}
	
	return FMRES_IGNORED
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1030\\ f0\\ fs16 \n\\ par }
*/
