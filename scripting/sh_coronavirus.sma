// MajinBuu - Eat the shit out of your enemy aite!??!!? Cuz Rockell is here, so do not fear ^_^
/* 
Thanks to duper/Rockell for the create entity majin buu code, and thanks to Natsheh for help with touching entities


// -    -   CVARS - copy and paste to shconfig.cfg
	
 //Corona Virus
coronavirus_level 0
coronavirus_percent 50    //	probabilidad de que aparezca un coronavirus (0, 100)
corona_adminflag a	//solo para adm? si es = 0 es para todos
corona_hpdmg 1500 	//cantidad maxima de Hp a la que mata sino resta
	
*/

#include <superheromod> 

// GLOBAL VARIABLES
new gHeroID
new gHeroName[] = "CoronaVirus"
new bool:gHasCoronaPower[SH_MAXSLOTS+1]

//cvars
new pcvarPercent, pcvarHPDamage, pcvarAdmin, gPcvarDamage, gPcvarChance

new const coronavirus_model[] = "models/shmod/coronavirus.mdl"
new const coronavirus_ent_name[] = "coronavirus"
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{ 
	// Plugin Info
	register_plugin("Corona Virus","1.0","Lucas 'Arje'")
	 
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("coronavirus_level", "2" )
	pcvarPercent 	= register_cvar("coronavirus_percent", "0.50")
	pcvarHPDamage	= register_cvar("corona_hpdmg", "1500")	//cantidad maxima de Hp a la que mata
	pcvarAdmin	= register_cvar("corona_adminflag", "p")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Crea CoronaVirus! (Only Admin).", "Convierte a los que mates en corona-virus, si un enemigo lo toca, se contagiará y morirá!")

	// REGISTERS A TOUCH EVENT, WHEN TWO THINGS TOUCH
	register_touch(coronavirus_ent_name, "player","corona_touch")
	
	// Waits 4 seconds then loads cvars into variables
	loadCVARS()
	set_task(4.0,"loadCVARS")
}

public loadCVARS() {
	gPcvarDamage 	= get_pcvar_num(pcvarHPDamage)
	gPcvarChance 	= get_pcvar_num(pcvarPercent)
}

public plugin_precache() precache_model(coronavirus_model)
//------------------------------------------------------------------------------------------------
//				Hero INIT and SPAWN y REMOVE ENTITYS				//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	
	switch(mode) {
		case SH_HERO_ADD: {
			gHasCoronaPower[id] = true
			// para que solo de admin
			corona_admincheck(id)
		}
		case SH_HERO_DROP: {
			gHasCoronaPower[id] = false
			remove_coronavirus(id)
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//------------------------------------------------------------------------------------------------
//				Spawn n Death							//
//------------------------------------------------------------------------------------------------
public sh_client_spawn(id) {
	if ( gHasCoronaPower[id] ) corona_admincheck(id)
}

public sh_client_death(victim, attacker)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	if ( gHasCoronaPower[victim] ) remove_coronavirus(victim)
	
	if ( victim == attacker || !gHasCoronaPower[attacker] ) return
	
	new randnum = random_num(1, 100)
	// for create de enititys // this is %%
	if ( gPcvarChance <= randnum ) return
	 
	if ( is_user_alive(attacker) ) {
		new parm[2]
		parm[0] = victim
		parm[1] = attacker 
		createcoronavirus(parm)
	}	
} 
//------------------------------------------------------------------------------------------------
//				Create and REmove						//
//------------------------------------------------------------------------------------------------
public createcoronavirus(parm[])
{
	new victim = parm[0]
	new coronaowner = parm[1]
	 
	new Float:vAim[3], Float:vOrigin[3]
	entity_get_vector(victim, EV_VEC_origin, vOrigin)
	VelocityByAim(victim, random_num(2, 4), vAim)
	
	vOrigin[0] += vAim[0]
	vOrigin[1] += vAim[1] + 50
	vOrigin[2] += 30.0
	
	new coronavirus = create_entity("info_target")
	entity_set_string(coronavirus, EV_SZ_classname, coronavirus_ent_name)
	entity_set_model(coronavirus, coronavirus_model)	
	entity_set_size(coronavirus, Float:{-8.0, -8.0, -8.0}, Float:{8.0, 8.0, 8.0})
	entity_set_int(coronavirus, EV_INT_solid, SOLID_TRIGGER) 
	entity_set_int(coronavirus, EV_INT_movetype, MOVETYPE_TOSS)
	entity_set_vector(coronavirus, EV_VEC_origin, vOrigin)
	entity_set_edict(coronavirus, EV_ENT_owner, coronaowner) 
}

public remove_coronavirus(id)
{
	
	new ent = SH_MAXSLOTS+1;
	while( (ent = find_ent_by_owner(ent, coronavirus_ent_name, id)) > 0) { 
		set_pev(ent, pev_flags, FL_KILLME);
		dllfunc(DLLFunc_Think, ent);
	}
	
	/* 
	new MaxClients = get_maxplayers()
	static ent, iThink; ent = MaxClients; 
	while( (ent = find_ent(ent, coronavirus_ent_name) ) > MaxClients && pev_valid(ent) ){
		iThink = pev(ent, pev_nextthink); iThink ? remove_entity(ent) : set_pev(ent, pev_flags, FL_KILLME);
	} 
	// sh_maxplayers()	// get_maxplayers()
	*/
	
	/* 
	new ent = 33;
	while((ent = find_ent_by_class(ent, coronavirus_ent_name)) != 0) {
		if( entity_get_edict(ent, EV_ENT_owner) != id )
			continue;
            
		remove_entity(ent);
	}
	
	new coronavirus = find_ent_by_class(-1, coronavirus_ent_name)
	while(coronavirus) {
		remove_entity(coronavirus)
		coronavirus = find_ent_by_class(coronavirus, coronavirus_ent_name)
	} */ 
}
//------------------------------------------------------------------------------------------------
//				Disconected and Round New					//
//------------------------------------------------------------------------------------------------ 
public client_disconnected(id)
	if ( gHasCoronaPower[id] ) remove_coronavirus(id)

public sh_round_end() {
	for (new id=1; id <= SH_MAXSLOTS; id++) 
		if( gHasCoronaPower[id] ) remove_coronavirus(id)
}
//------------------------------------------------------------------------------------------------
//				Register Touch							//
//------------------------------------------------------------------------------------------------ 
public corona_touch(ent, id) 
{
	if ( !pev_valid(ent) || !pev_valid(id) || !is_user_alive(id) ) return
	
	static classname[32]
	entity_get_string(ent, EV_SZ_classname, classname, 31)
	if(equal(classname, coronavirus_ent_name)) {
		static iOwner
		iOwner = entity_get_edict(ent, EV_ENT_owner);
		
		if( is_user_connected(iOwner) && get_user_team(iOwner) != get_user_team(id) ) {
			sh_extra_damage(id, iOwner, gPcvarDamage, "For CoronaVirus")
			remove_entity(ent);
			// remove_entity(iOwner);			
		}
	}
}

//------------------------------------------------------------------------------------------------
//				Connect y AdminCheck						//
//------------------------------------------------------------------------------------------------
public client_connect(id)
	gHasCoronaPower[id] = false

public corona_admincheck(id) 
{
	if ( !gHasCoronaPower[id] ) return
	
   	new accessLevel[10]
	get_pcvar_string(pcvarAdmin, accessLevel, 9)
	
	if (equali(accessLevel, "0")) return
   	
	// Para controlar si tiene admin
	if ( !(get_user_flags(id)&read_flags(accessLevel)) ) {
		sh_chat_message(id, gHeroID, "[Only Admin] Conseguite Admin Rata.")
      		client_cmd(id, "say drop %s", gHeroName)
		gHasCoronaPower[id] = false
   	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
