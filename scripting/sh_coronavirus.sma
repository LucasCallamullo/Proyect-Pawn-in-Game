// MajinBuu - Eat the shit out of your enemy aite!??!!? Cuz Rockell is here, so do not fear ^_^
/* 
Thanks to duper/Rockell for the create entity majin buu code, and thanks to Natsheh for help with touching entities


// -    -   CVARS - copy and paste to shconfig.cfg
	
 //Corona Virus
coronavirus_level 0
coronavirus_percent 50    //probabilidad de que aparezca un coronavirus
corona_adminflag a	//solo para adm? si es = 0 es para todos
corona_hpmax 1500 	//cantidad maxima de Hp a la que mata sino resta
	
*/

#include <superheromod> 

// GLOBAL VARIABLES
new gHeroID
new gHeroName[]="CoronaVirus"
new bool:gHasCoronaPower[SH_MAXSLOTS+1]
new bool:gCoronaSelected[SH_MAXSLOTS+1]

//cvars
new pcvarPercent, pcvarHPMax, pcvarAadmin
//------------------------------------------------------------------------------------------------
//				Plugin Init and Precache					//
//------------------------------------------------------------------------------------------------
public plugin_init()
{ 
	// Plugin Info
	register_plugin("Corona Virus","1.0","Lucas 'Arje'")
	 
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel 	= register_cvar("coronavirus_level", "2" )
	pcvarPercent 	= register_cvar("coronavirus_percent", "0.50")
	pcvarHPMax	= register_cvar("corona_hpmax", "1500")	//cantidad maxima de Hp a la que mata
	pcvarAadmin	= register_cvar("corona_adminflag", "p")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Crea CoronaVirus! (Only Admin).", "Convierte a los que mates en corona-virus, si un enemigo lo toca, se contagiará y morirá!")
}

public plugin_precache() 
	precache_model("models/shmod/coronavirus.mdl")
//------------------------------------------------------------------------------------------------
//				Hero INIT and SPAWN y REMOVE ENTITYS				//
//------------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	
	switch(mode)
	{
		case SH_HERO_ADD: {
			gHasCoronaPower[id] = true
			// para que solo de admin
			gCoronaSelected[id] = gHasCoronaPower[id]
			Corona_admincheck(id)
		}
		case SH_HERO_DROP: {
			gHasCoronaPower[id] = false
		}
	}
}

public sh_client_spawn(id)
{
	if ( gHasCoronaPower[id] ) 
		remove_coronavirus(id)
}

public remove_coronavirus(id)
{
	new ent = 33;
	while((ent = find_ent_by_class(ent, "coronavirus")) != 0) {
		if( entity_get_edict(ent, EV_ENT_owner) != id )
			continue;
            
		remove_entity(ent);
	}
	
	/* new coronavirus = find_ent_by_class(-1, "coronavirus")
	while(coronavirus) {
		remove_entity(coronavirus)
		coronavirus = find_ent_by_class(coronavirus, "coronavirus")
	} */
}
//------------------------------------------------------------------------------------------------
//				Death Y Creacion de Entidad Y Touch				//
//------------------------------------------------------------------------------------------------
public sh_client_death(victim, attacker)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	if ( victim == attacker ) return
	 
	new randnum = random_num(0, 100)
	new coronachance = floatround(get_pcvar_float(pcvarPercent) * 100)
	 
	if ( coronachance >= randnum && is_user_alive(attacker) && gHasCoronaPower[attacker] ) {
		
		new dead = victim
		new parm[2]
		parm[0] = dead
		parm[1] = attacker 
		createcoronavirus(parm)
	}
} 

public createcoronavirus(parm[])
{
	new victim = parm[0]
	new coronaowner = parm[1]
	
	new Float:vAim[3], Float:vOrigin[3]
	entity_get_vector(victim, EV_VEC_origin, vOrigin)
	VelocityByAim(victim, random_num(2, 4), vAim)
	
	vOrigin[0] += vAim[0]
	vOrigin[1] += vAim[1] + 50
	vOrigin[2] += 30.0
	
	new coronavirus = create_entity("info_target")
	entity_set_string(coronavirus, EV_SZ_classname, "coronavirus")
	entity_set_model(coronavirus, "models/shmod/coronavirus.mdl")	
	entity_set_size(coronavirus, Float:{-2.5, -2.5, -1.5}, Float:{2.5, 2.5, 1.5})
	entity_set_edict(coronavirus, EV_ENT_owner, coronaowner)
	entity_set_int(coronavirus, EV_INT_solid, SOLID_TRIGGER) 
	entity_set_int(coronavirus, EV_INT_movetype, MOVETYPE_TOSS)
	entity_set_vector(coronavirus, EV_VEC_origin, vOrigin)
}

public pfn_touch(ptr, ptd) 
{
	if(!is_valid_ent(ptd) || !is_valid_ent(ptr)) return PLUGIN_CONTINUE		
	if(!is_user_connected(ptd) || !is_user_alive(ptd)) return PLUGIN_CONTINUE	
	
	new classname[32]
	entity_get_string(ptr, EV_SZ_classname, classname, 31)
	if(equal(classname, "coronavirus")) {
		
		new iOwner;
		// static iOwner
		iOwner = entity_get_edict(ptr, EV_ENT_owner);
		if( is_user_connected(iOwner) && get_user_team(iOwner) != get_user_team(ptd) ) {
			
			new gOrigHealth = get_user_health(ptd)
			new health = gOrigHealth-get_pcvar_num(pcvarHPMax)
			
			if (gOrigHealth <= get_pcvar_num(pcvarHPMax) ) {
				// This is to make the one who touches the entity die	// Make damage to target
				new damage = read_data(2)
				sh_extra_damage(ptd, iOwner, damage, "Por CoronaVirus", 0, SH_DMG_KILL)
				}
			else  	{
				set_user_health(ptd, health)
				}
				 
			remove_entity(ptr);
			}
		}  
	
	return PLUGIN_CONTINUE
}
//------------------------------------------------------------------------------------------------
//				Connect y AdminCheck						//
//------------------------------------------------------------------------------------------------
public client_connect(id)
	gHasCoronaPower[id] = false

public Corona_admincheck(id) 
{
   	new accessLevel[10] 
	get_pcvar_string(pcvarAadmin, accessLevel, 9)
   	
	if ( gCoronaSelected[id] &&  !(get_user_flags(id) & read_flags(accessLevel)) ) {
		sh_chat_message(id, gHeroID, "[Only Admin] Conseguite Admin Rata.")
      		gHasCoronaPower[id] = false
      		client_cmd(id, "say drop %s", gHeroName)
   	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang11274\\ f0\\ fs16 \n\\ par }
*/
